{"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_grunt_angular_builder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/lib.npmtest_grunt_angular_builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/lib.npmtest_grunt_angular_builder.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":66}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":72}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_grunt_angular_builder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_grunt_angular_builder = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_grunt_angular_builder = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":65}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":79},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-grunt-angular-builder && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_grunt_angular_builder */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_grunt_angular_builder","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_grunt_angular_builder.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_grunt_angular_builder.rollup.js'] =","            local.assetsDict['/assets.npmtest_grunt_angular_builder.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_grunt_angular_builder.__dirname + '/lib.npmtest_grunt_angular_builder.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/Gruntfile.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/Gruntfile.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":11,"loc":{"start":{"line":11,"column":17},"end":{"line":12,"column":0}}}},"statementMap":{"1":{"start":{"line":11,"column":0},"end":{"line":209,"column":2}},"2":{"start":{"line":13,"column":2},"end":{"line":13,"column":33}},"3":{"start":{"line":16,"column":2},"end":{"line":167,"column":5}},"4":{"start":{"line":170,"column":2},"end":{"line":170,"column":28}},"5":{"start":{"line":173,"column":2},"end":{"line":173,"column":46}},"6":{"start":{"line":174,"column":2},"end":{"line":174,"column":45}},"7":{"start":{"line":175,"column":2},"end":{"line":175,"column":46}},"8":{"start":{"line":176,"column":2},"end":{"line":176,"column":37}},"9":{"start":{"line":179,"column":2},"end":{"line":179,"column":45}},"10":{"start":{"line":181,"column":2},"end":{"line":181,"column":40}},"11":{"start":{"line":185,"column":2},"end":{"line":195,"column":5}},"12":{"start":{"line":197,"column":2},"end":{"line":197,"column":79}},"13":{"start":{"line":198,"column":2},"end":{"line":198,"column":79}},"14":{"start":{"line":199,"column":2},"end":{"line":199,"column":81}},"15":{"start":{"line":200,"column":2},"end":{"line":200,"column":89}},"16":{"start":{"line":201,"column":2},"end":{"line":201,"column":116}},"17":{"start":{"line":202,"column":2},"end":{"line":202,"column":101}},"18":{"start":{"line":203,"column":2},"end":{"line":203,"column":105}},"19":{"start":{"line":204,"column":2},"end":{"line":204,"column":105}},"20":{"start":{"line":205,"column":2},"end":{"line":205,"column":110}},"21":{"start":{"line":206,"column":2},"end":{"line":206,"column":93}},"22":{"start":{"line":207,"column":2},"end":{"line":207,"column":88}}},"branchMap":{},"code":["/*"," * grunt-angular-builder"," * https://github.com/claudio-silva/grunt-angular-builder"," *"," * Copyright (c) 2013 Cláudio Silva"," * Licensed under the MIT license."," */","","'use strict';","","module.exports = function (grunt)","{","  require ('time-grunt') (grunt);","","  // Project configuration.","  grunt.initConfig ({","","    jshint: {","      all:     [","        'Gruntfile.js',","        'tasks/**/*.js'","      ],","      options: {","        jshintrc: '.jshintrc'","      }","    },","","    // Before generating any new files, remove any previously-created files.","    clean:  {","      tests: ['tmp', 'dist']","    },","","    'angular-builder': {","      'test-js-app':              {","        options: {","          mainModule:      'App',","          externalModules: 'Library1'","        },","        src:     'tests/js-only/**/*.js',","        dest:    'dist/main.js'","      },","      'test-js-lib':              {","        options: {","          mainModule:   'Library1',","          releaseBuild: {","            renameModuleRefs: true","          }","        },","        src:     'tests/js-only/**/*.js',","        dest:    'dist/library1.js'","      },","      'test-js-fail':             {","        /** Warning: The module variable reference declare doesn't match the preset name","         on the config setting moduleVar='module'. File: tests/js-only/extra/Submodule4.js */","        options: {","          mainModule: 'Library2'","        },","        src:     'tests/js-only/**/*.js',","        dest:    'dist/library2.js'","      },","      'test-js-comments':         {","        options: {","          mainModule: 'Library3'","        },","        src:     'tests/js-only/**/*.js',","        dest:    'dist/library3.js'","      },","      'test-stylesheets':         {","        options: {","          mainModule: 'Submodule1'","        },","        src:     [","          'tests/stylesheets/submodule1/**/*.js',","          'tests/stylesheets/submodule2/**/*.js'","        ],","        dest:    'dist/main.js'","      },","      'test-assets':              {","        options: {","          mainModule: 'App',","          assets:     {","            enabled:   true,","            targetDir: 'styles',","            symlink:   true","          }","        },","        src:     'tests/stylesheets/**/*.js',","        dest:    'dist/main.js'","      },","      'test-3rd-party':           {","        options:      {","          mainModule: 'App'","        },","        src:          'tests/3rd-party/**/*.js',","        dest:         'dist/main.js',","        forceInclude: 'tests/3rd-party/angular-loader.js'","      },","      'test-include-non-angular': {","        options:      {","          mainModule: 'App'","        },","        src:          'tests/include-non-angular/**/*.js',","        dest:         'dist/main.js',","        forceInclude: 'tests/include-non-angular/other/other.js'","      },","      'test-include-and-rebase':  {","        options:      {","          mainModule:   'App',","          debugBuild:   {","            rebaseDebugUrls: [","              { match: /other\\//, replaceWith: '' }, //remove path segment","              { match: /tests\\/include-non-angular/, replaceWith: 'js' }, //replace base path","              { match: /^.*demo.js$/, replaceWith: '' } //suppress library","            ]","          }","        },","        src:          'tests/include-non-angular/**/*.js',","        dest:         'dist/main.js',","        forceInclude: 'tests/include-non-angular/other/other.js'","      },","      'test-override-deps':       {","        options: {","          mainModule:           'App',","          overrideDependencies: {","            dependencies: ['Submodule1', 'Library1']","          }","        },","        src:     ['tests/js-only/**/*.js', '!tests/js-only/App.js'],","        dest:    'dist/main.js'","      },","      'test-slashes':       {","        options: {","          mainModule:           'App'","        },","        src:     ['tests/slashes/**/*.js'],","        dest:    'dist/main.js'","      }","    },","","    concat: {","      'test-stylesheets': {","        src:  '<%= requiredStylesheets %>',","        dest: 'dist/styles.css'","      },","      'test-assets':      {","        src:  '<%= requiredStylesheets %>',","        dest: 'dist/styles/styles.css'","      },","      '3rd-party':        {","        src:  'tests/3rd-party/index.html',","        dest: 'dist/index.html'","      }","    },","","    jsdoc: {","      dist: {","        // Force usage of JSDoc 3.3.0","        jsdoc:   \"./node_modules/.bin/jsdoc\",","        src:     ['tasks/**/*.js'],","        options: {","          destination: 'doc',","          configure:   'jsdoc.json'","        }","      }","    }","","  });","","  // Load this plugin's task(s).","  grunt.loadTasks ('tasks');","","  // These plugins provide necessary tasks.","  grunt.loadNpmTasks ('grunt-contrib-jshint');","  grunt.loadNpmTasks ('grunt-contrib-clean');","  grunt.loadNpmTasks ('grunt-contrib-concat');","  grunt.loadNpmTasks ('grunt-jsdoc');","","  // By default, lint and run all tests.","  grunt.registerTask ('default', ['jshint']);","","  grunt.registerTask ('doc', ['jsdoc']);","","  // Test tasks below can also be executed with the command line option `--build debug` to generate debug builds.","","  grunt.registerTask ('test', [","    'test-js-app',","    'test-js-lib',","    //'test-js-fail',","    'test-js-comments',","    'test-stylesheets',","    'test-assets',","    'test-3rd-party',","    'test-include-non-angular',","    'test-override-deps'","  ]);","","  grunt.registerTask ('test-js-app', ['clean', 'angular-builder:test-js-app']);","  grunt.registerTask ('test-js-lib', ['clean', 'angular-builder:test-js-lib']);","  grunt.registerTask ('test-js-fail', ['clean', 'angular-builder:test-js-fail']);","  grunt.registerTask ('test-js-comments', ['clean', 'angular-builder:test-js-comments']);","  grunt.registerTask ('test-stylesheets', ['clean', 'angular-builder:test-stylesheets', 'concat:test-stylesheets']);","  grunt.registerTask ('test-assets', ['clean', 'angular-builder:test-assets', 'concat:test-assets']);","  grunt.registerTask ('test-3rd-party', ['clean', 'angular-builder:test-3rd-party', 'concat:3rd-party']);","  grunt.registerTask ('test-include-non-angular', ['clean', 'angular-builder:test-include-non-angular']);","  grunt.registerTask ('test-include-and-rebase', ['clean', 'angular-builder:test-include-and-rebase::debug']);","  grunt.registerTask ('test-override-deps', ['clean', 'angular-builder:test-override-deps']);","  grunt.registerTask ('test-slashes', ['clean', 'angular-builder:test-slashes::debug']);","","};"],"l":{"11":1,"13":0,"16":0,"170":0,"173":0,"174":0,"175":0,"176":0,"179":0,"181":0,"185":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/angular-builder.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/angular-builder.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":1,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"fnMap":{"1":{"name":"(anonymous_1)","line":30,"loc":{"start":{"line":30,"column":17},"end":{"line":31,"column":0}}},"2":{"name":"(anonymous_2)","line":38,"loc":{"start":{"line":38,"column":56},"end":{"line":39,"column":2}}},"3":{"name":"(anonymous_3)","line":66,"loc":{"start":{"line":66,"column":24},"end":{"line":67,"column":4}}},"4":{"name":"(anonymous_4)","line":94,"loc":{"start":{"line":94,"column":31},"end":{"line":95,"column":6}}},"5":{"name":"(anonymous_5)","line":107,"loc":{"start":{"line":107,"column":56},"end":{"line":108,"column":6}}},"6":{"name":"(anonymous_6)","line":109,"loc":{"start":{"line":109,"column":33},"end":{"line":110,"column":8}}},"7":{"name":"(anonymous_7)","line":119,"loc":{"start":{"line":119,"column":31},"end":{"line":120,"column":6}}},"8":{"name":"loadMiddlewareModules","line":136,"loc":{"start":{"line":136,"column":2},"end":{"line":137,"column":2}}},"9":{"name":"(anonymous_9)","line":140,"loc":{"start":{"line":140,"column":40},"end":{"line":141,"column":4}}},"10":{"name":"(anonymous_10)","line":151,"loc":{"start":{"line":151,"column":42},"end":{"line":152,"column":6}}},"11":{"name":"assembleMiddleware","line":172,"loc":{"start":{"line":172,"column":2},"end":{"line":173,"column":2}}},"12":{"name":"(anonymous_12)","line":175,"loc":{"start":{"line":175,"column":36},"end":{"line":176,"column":4}}},"13":{"name":"traceModule","line":189,"loc":{"start":{"line":189,"column":2},"end":{"line":190,"column":2}}},"14":{"name":"(anonymous_14)","line":199,"loc":{"start":{"line":199,"column":31},"end":{"line":200,"column":6}}}},"statementMap":{"1":{"start":{"line":10,"column":0},"end":{"line":10,"column":34}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":82}},"3":{"start":{"line":17,"column":0},"end":{"line":18,"column":36}},"4":{"start":{"line":20,"column":0},"end":{"line":25,"column":21}},"5":{"start":{"line":30,"column":0},"end":{"line":212,"column":2}},"6":{"start":{"line":32,"column":2},"end":{"line":32,"column":20}},"7":{"start":{"line":38,"column":2},"end":{"line":127,"column":5}},"8":{"start":{"line":44,"column":4},"end":{"line":45,"column":46}},"9":{"start":{"line":45,"column":6},"end":{"line":45,"column":46}},"10":{"start":{"line":51,"column":4},"end":{"line":51,"column":44}},"11":{"start":{"line":60,"column":4},"end":{"line":60,"column":72}},"12":{"start":{"line":66,"column":4},"end":{"line":126,"column":19}},"13":{"start":{"line":71,"column":6},"end":{"line":71,"column":62}},"14":{"start":{"line":73,"column":6},"end":{"line":74,"column":45}},"15":{"start":{"line":74,"column":8},"end":{"line":74,"column":45}},"16":{"start":{"line":81,"column":6},"end":{"line":81,"column":81}},"17":{"start":{"line":83,"column":6},"end":{"line":83,"column":45}},"18":{"start":{"line":89,"column":6},"end":{"line":90,"column":47}},"19":{"start":{"line":90,"column":8},"end":{"line":90,"column":47}},"20":{"start":{"line":94,"column":6},"end":{"line":97,"column":9}},"21":{"start":{"line":96,"column":8},"end":{"line":96,"column":39}},"22":{"start":{"line":99,"column":6},"end":{"line":99,"column":54}},"23":{"start":{"line":107,"column":6},"end":{"line":113,"column":9}},"24":{"start":{"line":109,"column":8},"end":{"line":112,"column":11}},"25":{"start":{"line":111,"column":10},"end":{"line":111,"column":35}},"26":{"start":{"line":115,"column":6},"end":{"line":115,"column":52}},"27":{"start":{"line":119,"column":6},"end":{"line":122,"column":9}},"28":{"start":{"line":121,"column":8},"end":{"line":121,"column":42}},"29":{"start":{"line":124,"column":6},"end":{"line":124,"column":52}},"30":{"start":{"line":136,"column":2},"end":{"line":164,"column":3}},"31":{"start":{"line":138,"column":4},"end":{"line":138,"column":36}},"32":{"start":{"line":140,"column":4},"end":{"line":148,"column":7}},"33":{"start":{"line":142,"column":6},"end":{"line":142,"column":40}},"34":{"start":{"line":143,"column":6},"end":{"line":144,"column":68}},"35":{"start":{"line":144,"column":8},"end":{"line":144,"column":68}},"36":{"start":{"line":145,"column":6},"end":{"line":146,"column":41}},"37":{"start":{"line":146,"column":8},"end":{"line":146,"column":41}},"38":{"start":{"line":147,"column":6},"end":{"line":147,"column":54}},"39":{"start":{"line":150,"column":4},"end":{"line":161,"column":9}},"40":{"start":{"line":151,"column":6},"end":{"line":161,"column":9}},"41":{"start":{"line":153,"column":8},"end":{"line":153,"column":41}},"42":{"start":{"line":154,"column":8},"end":{"line":155,"column":50}},"43":{"start":{"line":155,"column":10},"end":{"line":155,"column":50}},"44":{"start":{"line":156,"column":8},"end":{"line":157,"column":56}},"45":{"start":{"line":158,"column":8},"end":{"line":159,"column":98}},"46":{"start":{"line":159,"column":10},"end":{"line":159,"column":98}},"47":{"start":{"line":160,"column":8},"end":{"line":160,"column":88}},"48":{"start":{"line":163,"column":4},"end":{"line":163,"column":34}},"49":{"start":{"line":172,"column":2},"end":{"line":180,"column":3}},"50":{"start":{"line":174,"column":4},"end":{"line":174,"column":25}},"51":{"start":{"line":175,"column":4},"end":{"line":178,"column":7}},"52":{"start":{"line":177,"column":6},"end":{"line":177,"column":55}},"53":{"start":{"line":179,"column":4},"end":{"line":179,"column":23}},"54":{"start":{"line":189,"column":2},"end":{"line":210,"column":3}},"55":{"start":{"line":191,"column":4},"end":{"line":191,"column":45}},"56":{"start":{"line":192,"column":4},"end":{"line":193,"column":65}},"57":{"start":{"line":193,"column":6},"end":{"line":193,"column":65}},"58":{"start":{"line":195,"column":4},"end":{"line":196,"column":13}},"59":{"start":{"line":196,"column":6},"end":{"line":196,"column":13}},"60":{"start":{"line":198,"column":4},"end":{"line":203,"column":5}},"61":{"start":{"line":199,"column":6},"end":{"line":202,"column":9}},"62":{"start":{"line":201,"column":8},"end":{"line":201,"column":52}},"63":{"start":{"line":205,"column":4},"end":{"line":209,"column":5}},"64":{"start":{"line":206,"column":6},"end":{"line":206,"column":60}},"65":{"start":{"line":207,"column":6},"end":{"line":207,"column":41}},"66":{"start":{"line":208,"column":6},"end":{"line":208,"column":27}}},"branchMap":{"1":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":44,"column":4}},{"start":{"line":44,"column":4},"end":{"line":44,"column":4}}]},"2":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":6},"end":{"line":73,"column":6}},{"start":{"line":73,"column":6},"end":{"line":73,"column":6}}]},"3":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":6},"end":{"line":89,"column":6}},{"start":{"line":89,"column":6},"end":{"line":89,"column":6}}]},"4":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":6},"end":{"line":143,"column":6}},{"start":{"line":143,"column":6},"end":{"line":143,"column":6}}]},"5":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":6},"end":{"line":145,"column":6}},{"start":{"line":145,"column":6},"end":{"line":145,"column":6}}]},"6":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":4},"end":{"line":150,"column":4}},{"start":{"line":150,"column":4},"end":{"line":150,"column":4}}]},"7":{"line":154,"type":"if","locations":[{"start":{"line":154,"column":8},"end":{"line":154,"column":8}},{"start":{"line":154,"column":8},"end":{"line":154,"column":8}}]},"8":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":21},"end":{"line":156,"column":32}},{"start":{"line":156,"column":36},"end":{"line":156,"column":46}}]},"9":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":8},"end":{"line":158,"column":8}},{"start":{"line":158,"column":8},"end":{"line":158,"column":8}}]},"10":{"line":160,"type":"cond-expr","locations":[{"start":{"line":160,"column":58},"end":{"line":160,"column":59}},{"start":{"line":160,"column":62},"end":{"line":160,"column":63}}]},"11":{"line":192,"type":"if","locations":[{"start":{"line":192,"column":4},"end":{"line":192,"column":4}},{"start":{"line":192,"column":4},"end":{"line":192,"column":4}}]},"12":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"13":{"line":198,"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":198,"column":4}},{"start":{"line":198,"column":4},"end":{"line":198,"column":4}}]},"14":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":4},"end":{"line":205,"column":4}},{"start":{"line":205,"column":4},"end":{"line":205,"column":4}}]},"15":{"line":205,"type":"binary-expr","locations":[{"start":{"line":205,"column":8},"end":{"line":205,"column":36}},{"start":{"line":205,"column":40},"end":{"line":205,"column":95}}]}},"code":["/**"," * @license"," * AngularJS Builder."," * Copyright 2013 Cláudio Manuel Brás da Silva."," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var TASK_NAME = 'angular-builder';","","var TASK_DESCRIPTION = 'Generates a release/debug build of an AngularJS project.';","","/**"," * Utility functions."," */","var util = require ('./lib/gruntUtil')","  , types = require ('./lib/types');","","var Context = types.Context","  , ContextEvent = types.ContextEvent","  , TaskOptions = types.TaskOptions","  , extend = util.extend","  , fatal = util.fatal","  , info = util.info;","/**"," * Exports a function that will be called by Grunt to register tasks for this plugin."," * @param grunt The Grunt API."," */","module.exports = function (grunt)","{","  util.init (grunt);","","//------------------------------------------------------------------------------","// GRUNT TASK","//------------------------------------------------------------------------------","","  grunt.registerMultiTask (TASK_NAME, TASK_DESCRIPTION, function ()","  {","    //------------------","    // SETUP","    //------------------","","    if (!this.files.length)","      fatal ('No source files were defined.');","","    /**","     * The default values for all of the Angular Builder's options.","     * @type {TaskOptions}","     */","    var defaultOptions = new TaskOptions ();","","    /**","     * An ordered list of middleware classes from which the middleware stack will be created later on.","     *","     * Note: when loading the middleware modules, the TaskOptions class becomes augmented with middleware-specific","     * options.","     * @type {MiddlewareInterface[]}","     */","    var middlewareStackClasses = loadMiddlewareModules (defaultOptions);","","    //-------------------------","    // Process each file group","    //-------------------------","","    this.files.forEach (function (/** GruntFilesArrayExt */ fileGroup)","    {","      // Note: source code analysis information for each file group is reset for each file group,","      // i.e. each group is an independent build.","","      var context = new Context (grunt, this, defaultOptions);","","      if (!context.options.mainModule)","        fatal ('No main module is defined.');","","      /**","       * The sequential list of loaded middleare.","       * These will be reset for each file group.","       * @type {MiddlewareInterface[]}","       */","      var middlewareStack = assembleMiddleware (middlewareStackClasses, context);","","      context.trigger (ContextEvent.ON_INIT);","","      //------------------","      // LOAD SOURCE CODE","      //------------------","","      if (!fileGroup.dest)","        fatal ('No target script is defined.');","","      // Pass all the source code trough the 1st stage of the middleware stack.","","      middlewareStack.forEach (function (/*MiddlewareInterface*/ middleware)","      {","        middleware.analyze (fileGroup);","      });","","      context.trigger (ContextEvent.ON_AFTER_ANALYZE);","","      //------------------","      // BUILD","      //------------------","","      // Trace the dependency graph and pass each module trough the 2nd stage of the middleware stack.","","      traceModule (context.options.mainModule, context, function (/*ModuleDef*/module)","      {","        middlewareStack.forEach (function (/*MiddlewareInterface*/ middleare)","        {","          middleare.trace (module);","        });","      });","","      context.trigger (ContextEvent.ON_AFTER_TRACE);","","      // Pass all the analysed source code trough the 3rd stage of the middleware stack.","","      middlewareStack.forEach (function (/*MiddlewareInterface*/ middleware)","      {","        middleware.build (fileGroup.dest);","      });","","      context.trigger (ContextEvent.ON_AFTER_BUILD);","","    }.bind (this));","  });","","  /**","   * Loads all middlewares (both internal and external).","   *","   * @param {TaskOptions} options The task's base default options. Extended options contributed by middleware will be","   * set in turn by each loaded middleware module.","   * @return {Array}","   */","  function loadMiddlewareModules (options)","  {","    var middlewareStackClasses = [];","","    options.internalMiddleware.forEach (function (moduleName)","    {","      var module = require (moduleName);","      if (!module.middleware)","        util.fatal ('No middleware found on module %.', moduleName);","      if (module.options)","        extend (options, module.options);","      middlewareStackClasses.push (module.middleware);","    });","","    if (options.externalMiddleware)","      options.externalMiddleware.forEach (function (info)","      {","        var module = require (info.load);","        if (module.options)","          extend (options, new module.options ());","        var target = info.before || info.after","          , i = middlewareStackClasses.indexOf (target);","        if (~i)","          util.fatal (\"Can't locate the % middleware module for inserting %.\", target, info.load);","        middlewareStackClasses.splice (i + (info.before ? 0 : 1), 0, module.middleware);","      });","","    return middlewareStackClasses;","  }","","  /**","   * Creates a new instance of each loaded middleware and assembles them into a sequential list.","   * @param {MiddlewareInterface[]} middlewareStackClasses An ordered list of classes to be instantiated.","   * @param {Context} context The build execution context.","   * @returns {MiddlewareInterface[]}","   */","  function assembleMiddleware (middlewareStackClasses, context)","  {","    var middlewares = [];","    middlewareStackClasses.forEach (function (MiddlewareClass)","    {","      middlewares.push (new MiddlewareClass (context));","    });","    return middlewares;","  }","","  /**","   * Traces a dependency graph for the specified module and calls the given callback","   * to process each required module in the correct loading order.","   * @param {string} moduleName","   * @param {Context} context The execution context for the middleware stack.","   * @param {function(ModuleDef)} processHook","   */","  function traceModule (moduleName, context, processHook)","  {","    var module = context.modules[moduleName];","    if (!module)","      fatal ('Module <cyan>%</cyan> was not found.', moduleName);","    // Ignore the module if it's external.","    if (module.external)","      return;","    // Include required submodules first.","    if (module.requires) {","      module.requires.forEach (function (modName)","      {","        traceModule (modName, context, processHook);","      });","    }","    // Ignore references to already loaded modules or to explicitly excluded modules.","    if (!context.loaded[module.name] && !~context.options.excludedModules.indexOf (module.name)) {","      info ('Including module <cyan>%</cyan>.', moduleName);","      context.loaded[module.name] = true;","      processHook (module);","    }","  }","","};",""],"l":{"10":1,"12":1,"17":1,"20":1,"30":1,"32":0,"38":0,"44":0,"45":0,"51":0,"60":0,"66":0,"71":0,"73":0,"74":0,"81":0,"83":0,"89":0,"90":0,"94":0,"96":0,"99":0,"107":0,"109":0,"111":0,"115":0,"119":0,"121":0,"124":0,"136":1,"138":0,"140":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"150":0,"151":0,"153":0,"154":0,"155":0,"156":0,"158":0,"159":0,"160":0,"163":0,"172":1,"174":0,"175":0,"177":0,"179":0,"189":1,"191":0,"192":0,"193":0,"195":0,"196":0,"198":0,"199":0,"201":0,"205":0,"206":0,"207":0,"208":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/gruntUtil.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/gruntUtil.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":4,"32":4,"33":4,"34":1,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":1,"61":0,"62":1,"63":0,"64":1,"65":0,"66":1,"67":0,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":1,"98":4,"99":1,"100":0,"101":0,"102":0,"103":0,"104":0,"105":1,"106":0,"107":1,"108":0,"109":0,"110":1,"111":0,"112":1,"113":0,"114":1,"115":1,"116":1,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":1,"127":0,"128":1,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0,0,0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":0,"2":0,"3":4,"4":4,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":4,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"(anonymous_1)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":55,"column":0}}},"2":{"name":"extend","line":72,"loc":{"start":{"line":72,"column":17},"end":{"line":73,"column":0}}},"3":{"name":"(anonymous_3)","line":105,"loc":{"start":{"line":105,"column":18},"end":{"line":106,"column":0}}},"4":{"name":"(anonymous_4)","line":109,"loc":{"start":{"line":109,"column":28},"end":{"line":110,"column":2}}},"5":{"name":"(anonymous_5)","line":121,"loc":{"start":{"line":121,"column":16},"end":{"line":122,"column":0}}},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":43},"end":{"line":124,"column":2}}},"7":{"name":"debug","line":128,"loc":{"start":{"line":128,"column":2},"end":{"line":129,"column":2}}},"8":{"name":"(anonymous_8)","line":164,"loc":{"start":{"line":164,"column":30},"end":{"line":165,"column":0}}},"9":{"name":"(anonymous_9)","line":174,"loc":{"start":{"line":174,"column":16},"end":{"line":175,"column":0}}},"10":{"name":"(anonymous_10)","line":184,"loc":{"start":{"line":184,"column":15},"end":{"line":185,"column":0}}},"11":{"name":"(anonymous_11)","line":194,"loc":{"start":{"line":194,"column":18},"end":{"line":195,"column":0}}},"12":{"name":"(anonymous_12)","line":204,"loc":{"start":{"line":204,"column":15},"end":{"line":205,"column":0}}},"13":{"name":"(anonymous_13)","line":216,"loc":{"start":{"line":216,"column":25},"end":{"line":217,"column":0}}},"14":{"name":"(anonymous_14)","line":226,"loc":{"start":{"line":226,"column":35},"end":{"line":227,"column":0}}},"15":{"name":"iterate","line":233,"loc":{"start":{"line":233,"column":3},"end":{"line":234,"column":2}}},"16":{"name":"(anonymous_16)","line":239,"loc":{"start":{"line":239,"column":30},"end":{"line":240,"column":4}}},"17":{"name":"(anonymous_17)","line":254,"loc":{"start":{"line":254,"column":36},"end":{"line":255,"column":0}}},"18":{"name":"iterate","line":259,"loc":{"start":{"line":259,"column":3},"end":{"line":260,"column":2}}},"19":{"name":"(anonymous_19)","line":261,"loc":{"start":{"line":261,"column":30},"end":{"line":262,"column":4}}},"20":{"name":"(anonymous_20)","line":281,"loc":{"start":{"line":281,"column":20},"end":{"line":282,"column":0}}},"21":{"name":"(anonymous_21)","line":306,"loc":{"start":{"line":306,"column":19},"end":{"line":307,"column":0}}},"22":{"name":"(anonymous_22)","line":317,"loc":{"start":{"line":317,"column":26},"end":{"line":318,"column":0}}},"23":{"name":"(anonymous_23)","line":331,"loc":{"start":{"line":331,"column":23},"end":{"line":332,"column":0}}},"24":{"name":"(anonymous_24)","line":344,"loc":{"start":{"line":344,"column":17},"end":{"line":345,"column":0}}},"25":{"name":"(anonymous_25)","line":346,"loc":{"start":{"line":346,"column":35},"end":{"line":347,"column":2}}},"26":{"name":"(anonymous_26)","line":358,"loc":{"start":{"line":358,"column":20},"end":{"line":359,"column":0}}},"27":{"name":"(anonymous_27)","line":369,"loc":{"start":{"line":369,"column":22},"end":{"line":370,"column":0}}},"28":{"name":"(anonymous_28)","line":382,"loc":{"start":{"line":382,"column":23},"end":{"line":383,"column":0}}},"29":{"name":"csprintf","line":405,"loc":{"start":{"line":405,"column":0},"end":{"line":406,"column":0}}},"30":{"name":"(anonymous_30)","line":409,"loc":{"start":{"line":409,"column":49},"end":{"line":410,"column":2}}},"31":{"name":"(anonymous_31)","line":415,"loc":{"start":{"line":415,"column":64},"end":{"line":416,"column":2}}},"32":{"name":"icsprintf","line":432,"loc":{"start":{"line":432,"column":0},"end":{"line":433,"column":0}}},"33":{"name":"createFileTree","line":442,"loc":{"start":{"line":442,"column":0},"end":{"line":443,"column":0}}},"34":{"name":"(anonymous_34)","line":450,"loc":{"start":{"line":450,"column":21},"end":{"line":451,"column":2}}},"35":{"name":"(anonymous_35)","line":455,"loc":{"start":{"line":455,"column":36},"end":{"line":456,"column":6}}}},"statementMap":{"1":{"start":{"line":17,"column":0},"end":{"line":17,"column":32}},"2":{"start":{"line":23,"column":0},"end":{"line":23,"column":19}},"3":{"start":{"line":29,"column":0},"end":{"line":29,"column":54}},"4":{"start":{"line":34,"column":0},"end":{"line":34,"column":10}},"5":{"start":{"line":39,"column":0},"end":{"line":39,"column":12}},"6":{"start":{"line":45,"column":0},"end":{"line":45,"column":28}},"7":{"start":{"line":46,"column":0},"end":{"line":46,"column":30}},"8":{"start":{"line":47,"column":0},"end":{"line":47,"column":16}},"9":{"start":{"line":54,"column":0},"end":{"line":58,"column":2}},"10":{"start":{"line":56,"column":2},"end":{"line":56,"column":24}},"11":{"start":{"line":57,"column":2},"end":{"line":57,"column":37}},"12":{"start":{"line":72,"column":0},"end":{"line":97,"column":2}},"13":{"start":{"line":74,"column":2},"end":{"line":77,"column":52}},"14":{"start":{"line":75,"column":4},"end":{"line":75,"column":11}},"15":{"start":{"line":76,"column":7},"end":{"line":77,"column":52}},"16":{"start":{"line":77,"column":4},"end":{"line":77,"column":52}},"17":{"start":{"line":78,"column":2},"end":{"line":95,"column":3}},"18":{"start":{"line":79,"column":4},"end":{"line":79,"column":21}},"19":{"start":{"line":80,"column":4},"end":{"line":81,"column":60}},"20":{"start":{"line":81,"column":6},"end":{"line":81,"column":60}},"21":{"start":{"line":82,"column":4},"end":{"line":94,"column":5}},"22":{"start":{"line":83,"column":6},"end":{"line":83,"column":15}},"23":{"start":{"line":84,"column":6},"end":{"line":93,"column":7}},"24":{"start":{"line":86,"column":10},"end":{"line":86,"column":34}},"25":{"start":{"line":87,"column":10},"end":{"line":87,"column":16}},"26":{"start":{"line":89,"column":10},"end":{"line":89,"column":28}},"27":{"start":{"line":90,"column":10},"end":{"line":90,"column":16}},"28":{"start":{"line":92,"column":10},"end":{"line":92,"column":19}},"29":{"start":{"line":96,"column":2},"end":{"line":96,"column":11}},"30":{"start":{"line":105,"column":0},"end":{"line":113,"column":2}},"31":{"start":{"line":107,"column":2},"end":{"line":108,"column":42}},"32":{"start":{"line":109,"column":2},"end":{"line":112,"column":5}},"33":{"start":{"line":111,"column":4},"end":{"line":111,"column":21}},"34":{"start":{"line":121,"column":0},"end":{"line":157,"column":2}},"35":{"start":{"line":123,"column":2},"end":{"line":126,"column":5}},"36":{"start":{"line":125,"column":4},"end":{"line":125,"column":33}},"37":{"start":{"line":128,"column":2},"end":{"line":156,"column":3}},"38":{"start":{"line":130,"column":4},"end":{"line":130,"column":44}},"39":{"start":{"line":131,"column":4},"end":{"line":155,"column":85}},"40":{"start":{"line":132,"column":6},"end":{"line":132,"column":17}},"41":{"start":{"line":133,"column":6},"end":{"line":152,"column":7}},"42":{"start":{"line":134,"column":8},"end":{"line":141,"column":9}},"43":{"start":{"line":135,"column":10},"end":{"line":135,"column":24}},"44":{"start":{"line":137,"column":10},"end":{"line":137,"column":27}},"45":{"start":{"line":138,"column":10},"end":{"line":139,"column":69}},"46":{"start":{"line":139,"column":12},"end":{"line":139,"column":69}},"47":{"start":{"line":140,"column":10},"end":{"line":140,"column":26}},"48":{"start":{"line":144,"column":8},"end":{"line":144,"column":21}},"49":{"start":{"line":145,"column":8},"end":{"line":145,"column":22}},"50":{"start":{"line":146,"column":8},"end":{"line":149,"column":9}},"51":{"start":{"line":147,"column":10},"end":{"line":147,"column":19}},"52":{"start":{"line":148,"column":10},"end":{"line":148,"column":67}},"53":{"start":{"line":150,"column":8},"end":{"line":150,"column":30}},"54":{"start":{"line":150,"column":15},"end":{"line":150,"column":30}},"55":{"start":{"line":151,"column":8},"end":{"line":151,"column":21}},"56":{"start":{"line":153,"column":6},"end":{"line":153,"column":25}},"57":{"start":{"line":155,"column":9},"end":{"line":155,"column":85}},"58":{"start":{"line":164,"column":0},"end":{"line":167,"column":2}},"59":{"start":{"line":166,"column":2},"end":{"line":166,"column":66}},"60":{"start":{"line":174,"column":0},"end":{"line":177,"column":2}},"61":{"start":{"line":176,"column":2},"end":{"line":176,"column":50}},"62":{"start":{"line":184,"column":0},"end":{"line":187,"column":2}},"63":{"start":{"line":186,"column":2},"end":{"line":186,"column":52}},"64":{"start":{"line":194,"column":0},"end":{"line":197,"column":2}},"65":{"start":{"line":196,"column":2},"end":{"line":196,"column":53}},"66":{"start":{"line":204,"column":0},"end":{"line":208,"column":2}},"67":{"start":{"line":206,"column":2},"end":{"line":207,"column":55}},"68":{"start":{"line":207,"column":4},"end":{"line":207,"column":55}},"69":{"start":{"line":216,"column":0},"end":{"line":219,"column":2}},"70":{"start":{"line":218,"column":2},"end":{"line":218,"column":99}},"71":{"start":{"line":226,"column":0},"end":{"line":247,"column":2}},"72":{"start":{"line":228,"column":2},"end":{"line":229,"column":40}},"73":{"start":{"line":233,"column":2},"end":{"line":243,"column":12}},"74":{"start":{"line":235,"column":4},"end":{"line":237,"column":48}},"75":{"start":{"line":236,"column":6},"end":{"line":237,"column":48}},"76":{"start":{"line":237,"column":8},"end":{"line":237,"column":48}},"77":{"start":{"line":239,"column":4},"end":{"line":242,"column":7}},"78":{"start":{"line":241,"column":6},"end":{"line":241,"column":22}},"79":{"start":{"line":245,"column":2},"end":{"line":245,"column":13}},"80":{"start":{"line":254,"column":0},"end":{"line":272,"column":2}},"81":{"start":{"line":256,"column":2},"end":{"line":257,"column":40}},"82":{"start":{"line":259,"column":2},"end":{"line":269,"column":12}},"83":{"start":{"line":261,"column":4},"end":{"line":264,"column":7}},"84":{"start":{"line":263,"column":6},"end":{"line":263,"column":22}},"85":{"start":{"line":266,"column":4},"end":{"line":268,"column":48}},"86":{"start":{"line":267,"column":6},"end":{"line":268,"column":48}},"87":{"start":{"line":268,"column":8},"end":{"line":268,"column":48}},"88":{"start":{"line":271,"column":2},"end":{"line":271,"column":13}},"89":{"start":{"line":281,"column":0},"end":{"line":297,"column":2}},"90":{"start":{"line":283,"column":2},"end":{"line":296,"column":40}},"91":{"start":{"line":284,"column":4},"end":{"line":293,"column":5}},"92":{"start":{"line":286,"column":6},"end":{"line":286,"column":31}},"93":{"start":{"line":287,"column":6},"end":{"line":287,"column":39}},"94":{"start":{"line":291,"column":6},"end":{"line":291,"column":40}},"95":{"start":{"line":292,"column":6},"end":{"line":292,"column":51}},"96":{"start":{"line":296,"column":7},"end":{"line":296,"column":40}},"97":{"start":{"line":306,"column":0},"end":{"line":309,"column":2}},"98":{"start":{"line":308,"column":2},"end":{"line":308,"column":60}},"99":{"start":{"line":317,"column":0},"end":{"line":324,"column":2}},"100":{"start":{"line":319,"column":2},"end":{"line":319,"column":13}},"101":{"start":{"line":320,"column":2},"end":{"line":322,"column":33}},"102":{"start":{"line":321,"column":4},"end":{"line":322,"column":33}},"103":{"start":{"line":322,"column":6},"end":{"line":322,"column":33}},"104":{"start":{"line":323,"column":2},"end":{"line":323,"column":11}},"105":{"start":{"line":331,"column":0},"end":{"line":334,"column":2}},"106":{"start":{"line":333,"column":2},"end":{"line":333,"column":65}},"107":{"start":{"line":344,"column":0},"end":{"line":350,"column":2}},"108":{"start":{"line":346,"column":2},"end":{"line":349,"column":15}},"109":{"start":{"line":348,"column":4},"end":{"line":348,"column":86}},"110":{"start":{"line":358,"column":0},"end":{"line":361,"column":2}},"111":{"start":{"line":360,"column":2},"end":{"line":360,"column":51}},"112":{"start":{"line":369,"column":0},"end":{"line":372,"column":2}},"113":{"start":{"line":371,"column":2},"end":{"line":371,"column":50}},"114":{"start":{"line":382,"column":0},"end":{"line":385,"column":2}},"115":{"start":{"line":384,"column":2},"end":{"line":384,"column":52}},"116":{"start":{"line":405,"column":0},"end":{"line":421,"column":1}},"117":{"start":{"line":408,"column":2},"end":{"line":408,"column":67}},"118":{"start":{"line":409,"column":2},"end":{"line":414,"column":5}},"119":{"start":{"line":411,"column":4},"end":{"line":412,"column":25}},"120":{"start":{"line":412,"column":6},"end":{"line":412,"column":25}},"121":{"start":{"line":413,"column":4},"end":{"line":413,"column":30}},"122":{"start":{"line":415,"column":2},"end":{"line":419,"column":5}},"123":{"start":{"line":417,"column":4},"end":{"line":417,"column":43}},"124":{"start":{"line":418,"column":4},"end":{"line":418,"column":32}},"125":{"start":{"line":420,"column":2},"end":{"line":420,"column":24}},"126":{"start":{"line":432,"column":0},"end":{"line":435,"column":1}},"127":{"start":{"line":434,"column":2},"end":{"line":434,"column":82}},"128":{"start":{"line":442,"column":0},"end":{"line":467,"column":1}},"129":{"start":{"line":444,"column":2},"end":{"line":448,"column":8}},"130":{"start":{"line":450,"column":2},"end":{"line":465,"column":5}},"131":{"start":{"line":452,"column":4},"end":{"line":453,"column":25}},"132":{"start":{"line":454,"column":4},"end":{"line":463,"column":9}},"133":{"start":{"line":455,"column":6},"end":{"line":463,"column":9}},"134":{"start":{"line":457,"column":8},"end":{"line":461,"column":12}},"135":{"start":{"line":458,"column":10},"end":{"line":461,"column":12}},"136":{"start":{"line":462,"column":8},"end":{"line":462,"column":50}},"137":{"start":{"line":464,"column":4},"end":{"line":464,"column":36}},"138":{"start":{"line":466,"column":2},"end":{"line":466,"column":14}}},"branchMap":{"1":{"line":29,"type":"cond-expr","locations":[{"start":{"line":29,"column":40},"end":{"line":29,"column":46}},{"start":{"line":29,"column":49},"end":{"line":29,"column":53}}]},"2":{"line":74,"type":"if","locations":[{"start":{"line":74,"column":2},"end":{"line":74,"column":2}},{"start":{"line":74,"column":2},"end":{"line":74,"column":2}}]},"3":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":6},"end":{"line":74,"column":16}},{"start":{"line":74,"column":20},"end":{"line":74,"column":35}}]},"4":{"line":76,"type":"if","locations":[{"start":{"line":76,"column":7},"end":{"line":76,"column":7}},{"start":{"line":76,"column":7},"end":{"line":76,"column":7}}]},"5":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":4},"end":{"line":80,"column":4}},{"start":{"line":80,"column":4},"end":{"line":80,"column":4}}]},"6":{"line":84,"type":"switch","locations":[{"start":{"line":85,"column":8},"end":{"line":87,"column":16}},{"start":{"line":88,"column":8},"end":{"line":90,"column":16}},{"start":{"line":91,"column":8},"end":{"line":92,"column":19}}]},"7":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":131,"column":4}},{"start":{"line":131,"column":4},"end":{"line":131,"column":4}}]},"8":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":6},"end":{"line":133,"column":6}},{"start":{"line":133,"column":6},"end":{"line":133,"column":6}}]},"9":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":8}},{"start":{"line":134,"column":8},"end":{"line":134,"column":8}}]},"10":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]},"11":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":2},"end":{"line":206,"column":2}},{"start":{"line":206,"column":2},"end":{"line":206,"column":2}}]},"12":{"line":218,"type":"cond-expr","locations":[{"start":{"line":218,"column":20},"end":{"line":218,"column":59}},{"start":{"line":218,"column":62},"end":{"line":218,"column":92}}]},"13":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":6},"end":{"line":236,"column":6}},{"start":{"line":236,"column":6},"end":{"line":236,"column":6}}]},"14":{"line":267,"type":"if","locations":[{"start":{"line":267,"column":6},"end":{"line":267,"column":6}},{"start":{"line":267,"column":6},"end":{"line":267,"column":6}}]},"15":{"line":283,"type":"if","locations":[{"start":{"line":283,"column":2},"end":{"line":283,"column":2}},{"start":{"line":283,"column":2},"end":{"line":283,"column":2}}]},"16":{"line":284,"type":"if","locations":[{"start":{"line":284,"column":4},"end":{"line":284,"column":4}},{"start":{"line":284,"column":4},"end":{"line":284,"column":4}}]},"17":{"line":321,"type":"if","locations":[{"start":{"line":321,"column":4},"end":{"line":321,"column":4}},{"start":{"line":321,"column":4},"end":{"line":321,"column":4}}]},"18":{"line":333,"type":"cond-expr","locations":[{"start":{"line":333,"column":24},"end":{"line":333,"column":57}},{"start":{"line":333,"column":60},"end":{"line":333,"column":64}}]},"19":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":11},"end":{"line":348,"column":23}},{"start":{"line":348,"column":28},"end":{"line":348,"column":84}}]},"20":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":47},"end":{"line":348,"column":56}},{"start":{"line":348,"column":60},"end":{"line":348,"column":64}}]},"21":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":66},"end":{"line":348,"column":71}},{"start":{"line":348,"column":75},"end":{"line":348,"column":76}}]},"22":{"line":360,"type":"cond-expr","locations":[{"start":{"line":360,"column":15},"end":{"line":360,"column":45}},{"start":{"line":360,"column":48},"end":{"line":360,"column":50}}]},"23":{"line":411,"type":"if","locations":[{"start":{"line":411,"column":4},"end":{"line":411,"column":4}},{"start":{"line":411,"column":4},"end":{"line":411,"column":4}}]},"24":{"line":411,"type":"binary-expr","locations":[{"start":{"line":411,"column":8},"end":{"line":411,"column":21}},{"start":{"line":411,"column":25},"end":{"line":411,"column":43}}]},"25":{"line":417,"type":"binary-expr","locations":[{"start":{"line":417,"column":12},"end":{"line":417,"column":14}},{"start":{"line":417,"column":19},"end":{"line":417,"column":21}},{"start":{"line":417,"column":25},"end":{"line":417,"column":27}},{"start":{"line":417,"column":33},"end":{"line":417,"column":35}},{"start":{"line":417,"column":39},"end":{"line":417,"column":41}}]},"26":{"line":418,"type":"cond-expr","locations":[{"start":{"line":418,"column":15},"end":{"line":418,"column":27}},{"start":{"line":418,"column":30},"end":{"line":418,"column":31}}]},"27":{"line":454,"type":"if","locations":[{"start":{"line":454,"column":4},"end":{"line":454,"column":4}},{"start":{"line":454,"column":4},"end":{"line":454,"column":4}}]},"28":{"line":457,"type":"if","locations":[{"start":{"line":457,"column":8},"end":{"line":457,"column":8}},{"start":{"line":457,"column":8},"end":{"line":457,"column":8}}]}},"code":["/**"," * A set of utility functions for use with Grunt."," *"," * @module lib/gruntUtil"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","/**"," * Test"," * @type {exports}"," */","var nodeUtil = require ('util');","","/*"," * Get color and style in your node.js console."," * Note: requiring this here modifies the String prototype!"," */","require ('colors');","","/**"," * OS dependent line terminator."," * @type {string}"," */","var NL = process.platform === 'win32' ? '\\r\\n' : '\\n';","","/**"," * The Grunt instance."," */","var grunt;","/**"," * <code>true</code> if the task is running in verbose mode."," * @type {boolean}"," */","var verbose;","","//------------------------------------------------------------------------------","// PUBLIC","//------------------------------------------------------------------------------","","exports.csprintf = csprintf;","exports.icsprintf = icsprintf;","exports.NL = NL;","","/**"," * Initializes the gruntUtil module."," * You MUST call this function before using most other functions in this module."," * @param gruntInstance"," */","exports.init = function (gruntInstance)","{","  grunt = gruntInstance;","  verbose = grunt.option ('verbose');","};","","/**"," * Copies properties recursively from each of the source objects to the target object."," *"," * Variable arguments: {...Object} Source objects."," *"," * Notes:"," * - Properties inherited from the prototype chain are also copied."," * - Copied properties of object type are merged with the target."," * - Copied properties of array type are not merged, they are are cloned (the array items are still the original)."," *"," * @param {Object} t Target."," */","exports.extend = function extend (t)","{","  if (t === null || t === undefined)","    t = {};","  else if (typeof t !== 'object')","    throw new TypeError ('Invalid target argument');","  for (var i = 1, m = arguments.length, a, v; i < m; ++i) {","    a = arguments[i];","    if (typeof a !== 'object')","      throw new TypeError ('Invalid source argument #' + i);","    for (var k in a) {","      v = a[k];","      switch (Object.prototype.toString.call (v)) {","        case '[object Object]':","          t[k] = extend (t[k], v);","          break;","        case '[object Array]':","          t[k] = v.slice ();","          break;","        default:","          t[k] = v;","      }","    }","  }","  return t;","};","","/**"," * A simplified string formatting function."," * Inserts arguments into % placeholders on the given string."," * @param {string} str The string to be formatted."," * @returns {string}"," */","exports.sprintf = function (str)","{","  var c = 0","    , args = [].slice.call (arguments, 1);","  return str.replace (/%/g, function ()","  {","    return args[c++];","  });","};","","/**"," * Outputs to the console a string representation of each argument."," * For objects, the output includes properties inherited from the prototype chain."," *"," * Variable arguments: {...Object} Source objects."," */","exports.debug = function ()","{","  Array.prototype.forEach.call (arguments, function (arg)","  {","    console.log (debug (arg, 0));","  });","","  function debug (arg, depth)","  {","    var s = exports.strRepeat ('  ', depth);","    if (typeof arg === 'object') {","      var o = [];","      if (arg instanceof Array) {","        if (!arg.length)","          o.push ('[]');","        else {","          o.push ('[', NL);","          for (var i = 0; i < arg.length; ++i)","            o.push (s, '  ', i, ': ', debug (arg[i], depth + 1), NL);","          o.push (s, ']');","        }","      }","      else {","        o.push ('{');","        var f = false;","        for (var k in arg) {","          f = true;","          o.push (NL, s, '  ', k, ': ', debug (arg[k], depth + 1));","        }","        if (f) o.push (NL, s);","        o.push ('}');","      }","      return o.join ('');","    }","    else return nodeUtil.inspect (arg, { showHidden: true, depth: 8, colors: true });","  }","};","","/**"," * Returns an error location description suitable for output."," * @param {string} path"," * @returns {string}"," */","exports.reportErrorLocation = function (path)","{","  return csprintf ('yellow', '  File: <cyan>%</cyan>' + NL, path);","};","","/**"," * Stops execution with an error message."," * Arguments are the same as the ones on <code>sprintf</code> but supports color tags like <code>csprintf</code> does."," * Default color is red."," */","exports.fatal = function ()","{","  grunt.fail.fatal (icsprintf ('red', arguments));","};","","/**"," * Displays an error message and, if --force is not enabled, stops execution."," * Arguments are the same as the ones on <code>sprintf</code> but supports color tags like <code>csprintf</code> does."," * Default color is yellow."," */","exports.warn = function ()","{","  grunt.fail.warn (icsprintf ('yellow', arguments));","};","","/**"," * Displays a message."," * Arguments are the same as the ones on <code>sprintf</code> but supports color tags like <code>csprintf</code> does."," * Default color is white."," */","exports.writeln = function ()","{","  grunt.log.writeln (icsprintf ('white', arguments));","};","","/**"," * Displays the given message colored grey, but only if running in verbose mode."," * Arguments are the same as the ones on <code>sprintf</code> but supports color tags like <code>csprintf</code> does."," * Default color is white."," */","exports.info = function ()","{","  if (verbose)","    grunt.log.writeln (icsprintf ('white', arguments));","};","","/**"," * Output additional error information for verbose mode."," * Returns the given message colored grey if running in verbose mode otherwise, returns a generic short message."," * @param {string} msg"," * @returns {string}"," */","exports.getExplanation = function (msg)","{","  return (verbose ? exports.indent (csprintf ('grey', msg)) : '  Use -v for more info.'.grey) + NL;","};","","/**"," * Sorts an array of file paths so that, for each folder, files in subfolders come BEFORE all of the folder's own files."," * @param {string[]} filePaths sorted by Grunt's native algoritm,"," * @return {string[]} re-sorted filePaths"," */","exports.sortFilesAfterSubfolders = function (filePaths)","{","  var out = []","    , tree = createFileTree (filePaths);","","  // Iterate folders.","","  (function iterate (folderNode)","  {","    for (var folder in folderNode.subfolders)","      if (folderNode.subfolders.hasOwnProperty (folder))","        iterate (folderNode.subfolders[folder]);","","    folderNode.files.forEach (function (file)","    {","      out.push (file);","    });","  }) (tree);","","  return out;","","};","","/**"," * Sorts an array of file paths so that, for each folder, files in subfolders come AFTER all of the folder's own files."," * @param {string[]} filePaths sorted by Grunt's native algoritm,"," * @return {string[]} re-sorted filePaths"," */","exports.sortFilesBeforeSubfolders = function (filePaths)","{","  var out = []","    , tree = createFileTree (filePaths);","","  (function iterate (folderNode)","  {","    folderNode.files.forEach (function (file)","    {","      out.push (file);","    });","","    for (var folder in folderNode.subfolders)","      if (folderNode.subfolders.hasOwnProperty (folder))","        iterate (folderNode.subfolders[folder]);","  }) (tree);","","  return out;","};","","/**"," * Writes or appends content to a file."," * When appending it adds a newline between the concatenated content."," * @param {string} path"," * @param {string} content"," * @param {boolean?} overwrite=false Overwrite an existing file contents instead of appending to them."," */","exports.writeFile = function (path, content, overwrite)","{","  if (grunt.file.exists (path)) {","    if (overwrite) {","      // Re-create file.","      grunt.file.delete (path);","      grunt.file.write (path, content);","    }","    else {","      // Append to existing file.","      var data = grunt.file.read (path);","      grunt.file.write (path, data + NL + content);","    }","  }","  // Create file.","  else grunt.file.write (path, content);","};","","/**"," * Generates a regular expression for matching the specified source code syntax."," * Use spaces to match optional white space on the source code."," * Backticks are used instead of \\ to allow for cleaner syntax on regexp strings. Ex: write '`n' instead of '\\\\n'."," * @param {string} syntax"," * @return {string}"," */","exports.tokenize = function (syntax)","{","  return syntax.replace (/`/g, '\\\\').replace (/ /g, '\\\\s*');","};","","/**"," * Returns an array of properties on the given object and their corresponding values."," * @param {Object} obj The object to be introspected."," * @param {function(string,*)} callback A function that will receive each property and its corresponding"," * value from the object."," */","exports.forEachProperty = function (obj, callback)","{","  var p = [];","  for (var prop in obj)","    if (obj.hasOwnProperty (prop))","      callback (prop, obj[prop]);","  return p;","};","","/**"," * Returns a comma-separated list of quoted strings from an array."," * @param {Array.<string>} array"," * @returns {string}"," */","exports.toQuotedList = function (array)","{","  return array.length ? \"['\" + array.join (\"', '\") + \"']\" : \"[]\";","};","","/**"," * Indents each line in the given text."," * @param {string} text The text to be indented."," * @param {number} [level=1] Indentation depth level."," * @param {string} [indentStr=\"&nbsp;&nbsp;\"] A white space string that represents each indentation level"," * (ex. spaces or tabs)."," * @return {string}"," */","exports.indent = function (text, level, indentStr)","{","  return text.split (/\\r?\\n/).map (function (line)","  {","    return line.trim () && (exports.strRepeat (indentStr || '  ', level || 1) + line);","  }).join (NL);","};","","/**"," * Repeats a string as many times as specified."," * @param {string} str The string to be repeated."," * @param {number} num How many times to repeat."," * @returns {string}"," */","exports.strRepeat = function (str, num)","{","  return num ? new Array (num + 1).join (str) : '';","};","","/**"," * Appends the second array into the first one, in-place."," * @param {Array} target"," * @param {Array?} src If null, not specified or an empty array, target will not be modified."," * @returns {Number} The cardinality of target after the operation."," */","exports.arrayAppend = function (target, src)","{","  return Array.prototype.push.apply (target, src);","};","","/**"," * Escape Regular Expression."," *"," * Turn a string into a valid Regular Expression"," * by escaping special chars"," *"," * @param {string} str The string to escape."," */","exports.escapeRegExp = function (str)","{","  return str.replace(/[.^$*+?()[{\\\\|\\]-]/g, '\\\\$&');","};","","//------------------------------------------------------------------------------","// PRIVATE","//------------------------------------------------------------------------------","","/**"," * Colorized sprintf."," * Formats a string with color and injects values into placeholders."," * Placeholders are represented by the symbol %."," * To colorize, use markup with the syntax: <code>&lt;color_name>text&lt;/color_name></code>"," * Warning: do not nest color tags!"," *"," * Variable arguments: {...string|...number} - values for each placeholder in <code>str</code>."," *"," * @param {string} baseColor The base color for the string. Segments with other colors will resume the base color where"," * they end."," * @param {string} str The string to be formatted."," * @returns {string}"," */","function csprintf (baseColor, str)","{","  /*jshint unused:false */","  str = exports.sprintf.apply (null, [].slice.call (arguments, 1));","  str = str.replace (/<(\\w+)>([\\s\\S]*?)<\\/\\1>/g, function (m, m1, m2)","  {","    if (m1 === 'bold' || m1 === 'underline')","      m2 = m2[baseColor];","    return '±' + m2[m1] + '§';","  });","  str = str.replace (/^([\\s\\S]*?)±|§([\\s\\S]*?)±|§([\\s\\S]*?)$/g, function (m, m1, m2, m3)","  {","    var s = m1 || (m2 || '') || (m3 || '');","    return s ? s[baseColor] : s;","  });","  return str[baseColor];","}","","/**"," * Similar to <code>csprintf</code> but supports an <code>args</code> argument that should receive a function's"," * <code>arguments</code> array-like object."," * @private"," *"," * @param {string} baseColor Color name."," * @param {Object} args Should be a function's <code>arguments</code> array-like object."," * @returns {string}"," */","function icsprintf (baseColor, args)","{","  return exports.csprintf.apply (null, [baseColor].concat ([].slice.call (args)));","}","","/**"," * Generates a tree of folder names and file names from a (possibliy) unsorted linear list of file paths."," * @param {string[]} filePaths"," * @returns {{files: string[], subfolders: {}}}"," */","function createFileTree (filePaths)","{","  var path = require ('path')","    , root = {","        files:      [],","        subfolders: {}","      };","","  filePaths.forEach (function (filename)","  {","    var dir = path.dirname (filename)","      , folderPtr = root;","    if (dir)","      dir.split (path.sep).forEach (function (segment)","      {","        if (!folderPtr.subfolders[segment])","          folderPtr.subfolders[segment] = {","            files:      [],","            subfolders: {}","          };","        folderPtr = folderPtr.subfolders[segment];","      });","    folderPtr.files.push (filename);","  });","  return root;","}",""],"l":{"17":1,"23":1,"29":1,"34":1,"39":1,"45":1,"46":1,"47":1,"54":1,"56":0,"57":0,"72":1,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"86":0,"87":0,"89":0,"90":0,"92":0,"96":0,"105":1,"107":4,"109":4,"111":4,"121":1,"123":0,"125":0,"128":1,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"137":0,"138":0,"139":0,"140":0,"144":0,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"153":0,"155":0,"164":1,"166":0,"174":1,"176":0,"184":1,"186":0,"194":1,"196":0,"204":1,"206":0,"207":0,"216":1,"218":0,"226":1,"228":0,"233":0,"235":0,"236":0,"237":0,"239":0,"241":0,"245":0,"254":1,"256":0,"259":0,"261":0,"263":0,"266":0,"267":0,"268":0,"271":0,"281":1,"283":0,"284":0,"286":0,"287":0,"291":0,"292":0,"296":0,"306":1,"308":4,"317":1,"319":0,"320":0,"321":0,"322":0,"323":0,"331":1,"333":0,"344":1,"346":0,"348":0,"358":1,"360":0,"369":1,"371":0,"382":1,"384":1,"405":1,"408":0,"409":0,"411":0,"412":0,"413":0,"415":0,"417":0,"418":0,"420":0,"432":1,"434":0,"442":1,"444":0,"450":0,"452":0,"454":0,"455":0,"457":0,"458":0,"462":0,"464":0,"466":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/types.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/types.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":1,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1,"36":0,"37":0,"38":0,"39":1,"40":1},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"TaskOptions","line":34,"loc":{"start":{"line":34,"column":0},"end":{"line":35,"column":0}}},"2":{"name":"GruntFilesArrayExt","line":121,"loc":{"start":{"line":121,"column":0},"end":{"line":122,"column":0}}},"3":{"name":"MiddlewareInterface","line":170,"loc":{"start":{"line":170,"column":0},"end":{"line":171,"column":0}}},"4":{"name":"(anonymous_4)","line":180,"loc":{"start":{"line":180,"column":11},"end":{"line":180,"column":33}}},"5":{"name":"(anonymous_5)","line":190,"loc":{"start":{"line":190,"column":11},"end":{"line":190,"column":29}}},"6":{"name":"(anonymous_6)","line":197,"loc":{"start":{"line":197,"column":11},"end":{"line":197,"column":35}}},"7":{"name":"Context","line":223,"loc":{"start":{"line":223,"column":0},"end":{"line":224,"column":0}}},"8":{"name":"(anonymous_8)","line":299,"loc":{"start":{"line":299,"column":25},"end":{"line":300,"column":2}}},"9":{"name":"(anonymous_9)","line":309,"loc":{"start":{"line":309,"column":25},"end":{"line":310,"column":2}}},"10":{"name":"(anonymous_10)","line":313,"loc":{"start":{"line":313,"column":17},"end":{"line":314,"column":6}}},"11":{"name":"(anonymous_11)","line":323,"loc":{"start":{"line":323,"column":25},"end":{"line":324,"column":2}}},"12":{"name":"(anonymous_12)","line":331,"loc":{"start":{"line":331,"column":15},"end":{"line":332,"column":4}}},"13":{"name":"ModuleDef","line":353,"loc":{"start":{"line":353,"column":0},"end":{"line":354,"column":0}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":16,"column":25}},"2":{"start":{"line":34,"column":0},"end":{"line":35,"column":2}},"3":{"start":{"line":37,"column":0},"end":{"line":113,"column":2}},"4":{"start":{"line":121,"column":0},"end":{"line":122,"column":2}},"5":{"start":{"line":124,"column":0},"end":{"line":157,"column":2}},"6":{"start":{"line":170,"column":0},"end":{"line":171,"column":2}},"7":{"start":{"line":173,"column":0},"end":{"line":198,"column":2}},"8":{"start":{"line":207,"column":0},"end":{"line":212,"column":2}},"9":{"start":{"line":223,"column":0},"end":{"line":240,"column":1}},"10":{"start":{"line":225,"column":2},"end":{"line":225,"column":21}},"11":{"start":{"line":226,"column":2},"end":{"line":226,"column":62}},"12":{"start":{"line":227,"column":2},"end":{"line":230,"column":3}},"13":{"start":{"line":228,"column":4},"end":{"line":228,"column":43}},"14":{"start":{"line":229,"column":4},"end":{"line":229,"column":46}},"15":{"start":{"line":231,"column":2},"end":{"line":231,"column":42}},"16":{"start":{"line":233,"column":2},"end":{"line":233,"column":60}},"17":{"start":{"line":235,"column":2},"end":{"line":235,"column":19}},"18":{"start":{"line":237,"column":2},"end":{"line":237,"column":65}},"19":{"start":{"line":238,"column":2},"end":{"line":238,"column":19}},"20":{"start":{"line":239,"column":2},"end":{"line":239,"column":20}},"21":{"start":{"line":242,"column":0},"end":{"line":343,"column":2}},"22":{"start":{"line":301,"column":4},"end":{"line":302,"column":35}},"23":{"start":{"line":302,"column":6},"end":{"line":302,"column":35}},"24":{"start":{"line":303,"column":4},"end":{"line":303,"column":43}},"25":{"start":{"line":311,"column":4},"end":{"line":311,"column":36}},"26":{"start":{"line":312,"column":4},"end":{"line":316,"column":9}},"27":{"start":{"line":313,"column":6},"end":{"line":316,"column":9}},"28":{"start":{"line":315,"column":8},"end":{"line":315,"column":19}},"29":{"start":{"line":326,"column":4},"end":{"line":326,"column":21}},"30":{"start":{"line":327,"column":4},"end":{"line":339,"column":7}},"31":{"start":{"line":334,"column":6},"end":{"line":338,"column":7}},"32":{"start":{"line":336,"column":8},"end":{"line":336,"column":70}},"33":{"start":{"line":337,"column":8},"end":{"line":337,"column":31}},"34":{"start":{"line":340,"column":4},"end":{"line":340,"column":19}},"35":{"start":{"line":353,"column":0},"end":{"line":358,"column":1}},"36":{"start":{"line":355,"column":2},"end":{"line":355,"column":19}},"37":{"start":{"line":356,"column":2},"end":{"line":356,"column":19}},"38":{"start":{"line":357,"column":2},"end":{"line":357,"column":22}},"39":{"start":{"line":360,"column":0},"end":{"line":402,"column":2}},"40":{"start":{"line":424,"column":0},"end":{"line":430,"column":2}}},"branchMap":{"1":{"line":227,"type":"if","locations":[{"start":{"line":227,"column":2},"end":{"line":227,"column":2}},{"start":{"line":227,"column":2},"end":{"line":227,"column":2}}]},"2":{"line":227,"type":"binary-expr","locations":[{"start":{"line":227,"column":6},"end":{"line":227,"column":36}},{"start":{"line":227,"column":40},"end":{"line":227,"column":74}}]},"3":{"line":237,"type":"binary-expr","locations":[{"start":{"line":237,"column":28},"end":{"line":237,"column":48}},{"start":{"line":237,"column":52},"end":{"line":237,"column":54}}]},"4":{"line":301,"type":"if","locations":[{"start":{"line":301,"column":4},"end":{"line":301,"column":4}},{"start":{"line":301,"column":4},"end":{"line":301,"column":4}}]},"5":{"line":312,"type":"if","locations":[{"start":{"line":312,"column":4},"end":{"line":312,"column":4}},{"start":{"line":312,"column":4},"end":{"line":312,"column":4}}]},"6":{"line":327,"type":"binary-expr","locations":[{"start":{"line":327,"column":6},"end":{"line":328,"column":67}},{"start":{"line":329,"column":11},"end":{"line":329,"column":13}}]},"7":{"line":327,"type":"cond-expr","locations":[{"start":{"line":328,"column":6},"end":{"line":328,"column":36}},{"start":{"line":328,"column":39},"end":{"line":328,"column":67}}]},"8":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":6},"end":{"line":334,"column":6}},{"start":{"line":334,"column":6},"end":{"line":334,"column":6}}]}},"code":["/**"," * Angular Builder's data types."," *"," * @module lib/types"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","/* jshint unused: vars */","","var util = require ('./gruntUtil')","  , extend = util.extend;","","//======================================================================================================================","","/**"," * Angular Builder's task options."," *"," * Note: Middleware classes augment this class with their own options."," *"," * @constructor"," * @mixes BuildAssetsOptionsMixin"," * @mixes MakeDebugBuildOptionsMixin"," * @mixes OverrideDependenciesOptionsMixin"," * @mixes MakeReleaseBuildOptionsMixin"," * @mixes ExportSourcePathsOptionsMixin"," * @mixes ExportRequiredStylesheetsOptionsMixin"," * @mixes ExportRequiredTemplatesOptionsMixin"," */","function TaskOptions ()","{}","","TaskOptions.prototype = {","  /**","   * Main module name. Only this module and its dependencies will be exported.","   * @type {string}","   */","  mainModule:         '',","  /**","   * A list of module names to ignore when building.","   * This allows the source code to contain references to modules not present in the build (ex. 3rd party libraries that","   * are loaded independently).","   *","   * If a module reference (for module access or for declaring a dependency) is found in the source code, which targets","   * a module that is not declared anywhere in the build's source files, the build operation aborts when that module","   * name is not present on this list.","   * @type {string|string[]}","   */","  externalModules:    '',","  /**","   * A list of framework built-in modules (ex. 'ng') that will always be appended to the `externalModules` list when","   * running tasks, so that references to them are ignored by the builder.","   * This is reserved for internal use, but could be overridden if you wish to completely replace the built-in behavior.","   * @type {string[]}","   */","  builtinModules:     ['ng'],","  /**","   * A list of modules to be excluded from the build.","   *","   * Unlike <code>externalModules</code>, which excludes each module and all of its dependencies, this option only","   * excludes the specified module from the output, not its dependencies.","   * One typical use for this is to exclude the main module from one or more build tasks.","   * @type {string[]}","   */","  excludedModules:    [],","  /**","   * A list of file paths to prepend to the build output.","   * This forces the inclusion of specific script files, independently of any source file scanning performed","   * by Grunt.","   * @type {string[]}","   */","  require:            [],","  /**","   * Allows loading third-party middleware into the middleware stack.","   * This is a task-level option. Do not specify it at target-level.","   *","   * This option allows the definition of a list of external middleware modules to load and for each one, to specify","   * where to place it on the middleware stack.","   * Each element in the list defines a module name (with the `load` property) and one of the following properties:","   * `before`, `after` or `over`. The property name selects the insertion position on the middleware stack for the","   * loaded one.","   * Note: internal middlewares are loaded into the middleware stack before the external middlewares.","   * @type {Array.<{load: string, before: ?string, after: ?string}>|null}","   */","  externalMiddleware: null,","  /**","   * Defines the list of middleware bundled with angular-builder.","   * This is a task-level option. Do not specify it at target-level.","   *","   * This option sets a list of modules names to load and assemble into a middleware stack in the specified order.","   * This is reserved for internal use, but could be overridden if you wish to replace some or all of the","   * built-in behavior. Usually, though, you should use the `externalMiddleware` option.","   * WARNING: the order of middleware listed here is important! If you change it, the build process may fail!","   * @type {string[]}","   * @const","   */","  internalMiddleware: [","    './middleware/overrideDependencies',","    './middleware/analyzeSourceCode',","    './middleware/exportSourcePaths',","    './middleware/includeRequiredScripts',","    './middleware/buildForeignScripts',","    './middleware/makeDebugBuild',","    './middleware/makeReleaseBuild',","    './middleware/exportRequiredStylesheets',","    './middleware/exportRequiredTemplates',","    './middleware/buildAssets'","  ]","};","","//======================================================================================================================","","/**"," * A Grunt files array with extended options."," * @interface"," */","function GruntFilesArrayExt ()","{}","","GruntFilesArrayExt.prototype = {","  /**","   * @type {string[]|null}","   */","  src:          null,","  /**","   * @type {string|null}","   */","  dest:         null,","  /**","   * A list of filenames or glob patterns that specify which javascript files should always be included in the build,","   * even if they have no module declarations.","   *","   * <b>Warning:</b> the files must also be matched by <code>src</code> to be included.","   *","   * <b>Note:</b> patterns without slashes will match against the basename of the path even if it contains slashes,","   * eg. pattern <code>*.js</code> will match filepath <code>path/to/file.js</code>.","   *","   * Usually, when a script file is found in the set of source files which doesn't contain a module declaration,","   * that file is ignored.","   * But, if the file name and path matches a file name or glob pattern specified here, it will still be included.","   *","   * Non-module files are output in the same order they were read, and <b>before</b> any module.","   *","   * <b>Tip:</b> You can append the current step's result script to another one that resulted from a previous build","   * step.","   * If you specify a target or file group exclusively for standalone script files and append the result to other built","   * files, you will have more control on the order of the assembled files.","   *","   *  @type {string|string[]|null}","   */","  forceInclude: null","","};","","//======================================================================================================================","","/**"," * API for an Angular Builder middleware plugin."," * Defines handlers for the three stages of the build process: analyze --> trace --> build."," *"," * Note: implementing classes must have a compatible constructor."," *"," * @interface"," * @param {Context} context The execution context for the middleware stack."," */","function MiddlewareInterface (context)","{}","","MiddlewareInterface.prototype = {","  /**","   * Load and analyze the specified source files.","   * Invoked once.","   *","   * @param {GruntFilesArrayExt} filesArray The set of source code files to be processed.","   */","  analyze: function (filesArray) {},","  /**","   * Scan a module for relevant information.","   * Invoked once for each required module in the application, in the order defined by the dependency graph.","   * Each module, in turn, is passed trough all the middlewares on the stack.","   *","   * Note: external and excluded modules are never traced; dependencies of excluded modules may be traced.","   *","   * @param {ModuleDef} module Gives you access to the module's metadata and its source code.","   */","  trace:   function (module) {},","  /**","   * Build the compilation output.","   * Invoked once.","   *","   * @param {string} targetScript Path to the output script.","   */","  build:   function (targetScript) {}","};","","//======================================================================================================================","","/**"," * Context event names."," * @enum {string}"," * @const"," */","var ContextEvent = {","  ON_INIT:          'init',","  ON_AFTER_ANALYZE: 'after-analyze',","  ON_AFTER_TRACE:   'after-trace',","  ON_AFTER_BUILD:   'after-build'","};","","/**"," * The execution context for the middleware stack."," * Contains shared information available throughout the middleware stack."," * @constructor"," * @param grunt The Grunt API."," * @param task The currently executing Grunt task."," * @param {TaskOptions} defaultOptions The default values for all of the Angular Builder's options, including all"," * middleware options."," */","function Context (grunt, task, defaultOptions)","{","  this.grunt = grunt;","  this.options = extend ({}, defaultOptions, task.options ());","  if (task.flags.debug !== undefined || grunt.option ('build') === 'debug') {","    this.options.debugBuild.enabled = true;","    this.options.releaseBuild.enabled = false;","  }","  this.verbose = grunt.option ('verbose');","  // Clone the external modules and use it as a starting point.","  this.modules = extend ({}, this._setupExternalModules ());","  // Reset tracer.","  this.loaded = {};","  // Reset the scripts list to a clone of the `require` option or to an empty list.","  this.standaloneScripts = (this.options.require || []).slice ();","  this.shared = {};","  this._events = {};","}","","Context.prototype = {","  /**","   * The Grunt API.","   */","  grunt:                 null,","  /**","   * Task-specific options set on the Gruntfile.","   * @type {TaskOptions}","   */","  options:               null,","  /**","   * <code>true</code> if the task is running in verbose mode.","   * @type {boolean}","   */","  verbose:               false,","  /**","   * A map of module names to module definition records.","   * @type {Object.<string, ModuleDef>}","   */","  modules:               null,","  /**","   * A map of module names to boolean values that registers which modules were already","   * emmited to/ referenced on the output.","   * @type {Object.<string,boolean>}","   */","  loaded:                null,","  /**","   * A list of scripts that have no module definitions but still are forced to being included in the build.","   * Each item contains the filename and the file content.","   * @type {Array.<{path: string, content: string}>}","   */","  standaloneScripts:     null,","  /**","   * Source code to be prepended to the output build file.","   * @type {string}","   */","  prependOutput:         '',","  /**","   * Source code to be appended to the output build file.","   * @type {string}","   */","  appendOutput:          '',","  /**","   * Custom data shared between extensions.","   */","  shared:                null,","  /**","   * A map of registered event handlers.","   * @type {Object.<ContextEvent,Function[]>}","   * @private","   */","  _events:               null,","  /**","   * Registers an event handler.","   * @param {ContextEvent} eventName","   * @param {function()} handler","   */","  listen:                function (eventName, handler)","  {","    if (!this._events[eventName])","      this._events[eventName] = [];","    this._events[eventName].push (handler);","  },","  /**","   * Calls all registered event handlers for the specified event.","   * @param {ContextEvent} eventName","   */","  trigger:               function (eventName)","  {","    var e = this._events[eventName];","    if (e)","      e.forEach (function (handler)","      {","        handler ();","      });","  },","  /**","   * Registers the configured external modules so that they can be ignored during the build output generation.","   * @returns {Object.<string, ModuleDef>}","   * @private","   */","  _setupExternalModules: function ()","  {","    /** @type {Object.<string, ModuleDef>} */","    var modules = {};","    ((typeof this.options.externalModules === 'string' ?","      [this.options.externalModules] : this.options.externalModules","      ) || []).","      concat (this.options.builtinModules).","      forEach (function (moduleName)","    {","      // Ignore redundant names.","      if (!modules[moduleName]) {","        /** @type {ModuleDef} */","        var module = modules[moduleName] = new ModuleDef (moduleName);","        module.external = true;","      }","    });","    return modules;","  }","","};","","//======================================================================================================================","","/**"," * A module definition record."," * Contains all javascript defining the module, read from one or more source files."," * @constructor"," * @param {string} name"," */","function ModuleDef (name)","{","  this.name = name;","  this.bodies = [];","  this.filePaths = [];","}","","ModuleDef.prototype = {","  /**","   * The module's name.","   * @type {!string}","   */","  name:      '',","  /**","   * Relative file paths to the source script files.","   * The first entry corresponds to the file that starts the module definition.","   * Note: empty string elements will be ignored.","   * Note: at least one element must be present, even if empty.","   * @type {string[]}","   */","  filePaths: null,","  /**","   * The content of the file that starts the module definition.","   * If null, the file was not yet read.","   * @type {?string}","   */","  head:      null,","  /**","   * The content of each additional file that appends definitions to the module.","   * If there are no additional files for the module, the value will be an empty array.","   * @type {string[]}","   */","  bodies:    null,","  /**","   * List with the names of the required modules.","   * If no modules are required, the value will be an empty array.","   * @type {string[]}","   */","  requires:  null,","  /**","   * When true, the module is not included in the build but it's possibly referenced in the source code.","   * @type {boolean}","   */","  external:  false,","  /**","   * Third parameter of a module declaration, if present.","   * @type {string|undefined}","   */","  configFn:  undefined","};","","//======================================================================================================================","","/**"," * A function result composite value that includes a status value and optional data."," * @name OperationResult"," *//**"," * Result status code. 0 = OK, other values depend on the context this is being used on."," * @name OperationResult#status"," * @type {number}"," */","/**"," * Optional output data from the function that returned this record."," * @name OperationResult#data"," * @type {*}"," */","","//======================================================================================================================","// EXPORT","//======================================================================================================================","","module.exports = {","  ModuleDef:          ModuleDef,","  ExtensionInterface: MiddlewareInterface,","  ContextEvent:       ContextEvent,","  Context:            Context,","  TaskOptions:        TaskOptions","};",""],"l":{"15":1,"34":1,"37":1,"121":1,"124":1,"170":1,"173":1,"207":1,"223":1,"225":0,"226":0,"227":0,"228":0,"229":0,"231":0,"233":0,"235":0,"237":0,"238":0,"239":0,"242":1,"301":0,"302":0,"303":0,"311":0,"312":0,"313":0,"315":0,"326":0,"327":0,"334":0,"336":0,"337":0,"340":0,"353":1,"355":0,"356":0,"357":0,"360":1,"424":1}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sandboxRun.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sandboxRun.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":21,"loc":{"start":{"line":21,"column":34},"end":{"line":22,"column":0}}},"2":{"name":"(anonymous_2)","line":24,"loc":{"start":{"line":24,"column":21},"end":{"line":24,"column":33}}},"3":{"name":"(anonymous_3)","line":38,"loc":{"start":{"line":38,"column":13},"end":{"line":38,"column":25}}},"4":{"name":"(anonymous_4)","line":59,"loc":{"start":{"line":59,"column":18},"end":{"line":59,"column":30}}}},"statementMap":{"1":{"start":{"line":21,"column":0},"end":{"line":83,"column":2}},"2":{"start":{"line":23,"column":2},"end":{"line":63,"column":8}},"3":{"start":{"line":24,"column":35},"end":{"line":24,"column":62}},"4":{"start":{"line":59,"column":32},"end":{"line":59,"column":59}},"5":{"start":{"line":64,"column":2},"end":{"line":82,"column":3}},"6":{"start":{"line":65,"column":4},"end":{"line":65,"column":41}},"7":{"start":{"line":66,"column":4},"end":{"line":66,"column":27}},"8":{"start":{"line":67,"column":4},"end":{"line":67,"column":27}},"9":{"start":{"line":68,"column":4},"end":{"line":68,"column":26}},"10":{"start":{"line":71,"column":4},"end":{"line":72,"column":20}},"11":{"start":{"line":72,"column":6},"end":{"line":72,"column":20}},"12":{"start":{"line":73,"column":4},"end":{"line":73,"column":17}},"13":{"start":{"line":78,"column":4},"end":{"line":78,"column":27}},"14":{"start":{"line":79,"column":4},"end":{"line":79,"column":27}},"15":{"start":{"line":80,"column":4},"end":{"line":80,"column":26}},"16":{"start":{"line":81,"column":4},"end":{"line":81,"column":19}}},"branchMap":{},"code":["/**"," * A javascript source code analysis library that evaluates code in a sandboxed environment."," *"," * @module lib/sandboxRun"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","/**"," * Checks if a block of javascript code performs any operation other than defining a module."," * In order to do that, it executes the code in an isolated sandbox."," * If any function or variable is created on the global scope as a result from that execution, a warning is issued."," * @param {string} source Javascript code to be analized."," * @return {false|Object} Returns false if the code is valid, otherwise returns an object with detected global scope"," * properties as keys."," */","exports.detectInvalidSourceCode = function (source)","{","  var vm = require ('vm')","    , mockupMethod = function () { return angularModuleMockup; }","    , angularModuleMockup = {","        animation:  mockupMethod,","        config:     mockupMethod,","        constant:   mockupMethod,","        controller: mockupMethod,","        directive:  mockupMethod,","        factory:    mockupMethod,","        filter:     mockupMethod,","        provider:   mockupMethod,","        run:        mockupMethod,","        service:    mockupMethod,","        value:      mockupMethod","      }","    , noop = function () {}","    , consoleMockup = {","        assert:         noop,","        debug:          noop,","        count:          noop,","        error:          noop,","        group:          noop,","        groupCollapsed: noop,","        groupEnd:       noop,","        info:           noop,","        log:            noop,","        profile:        noop,","        profileEnd:     noop,","        time:           noop,","        timeEnd:        noop,","        timeStamp:      noop,","        trace:          noop,","        warn:           noop","      }","    , sandbox = {","        angular: {","          module: function () { return angularModuleMockup; }","        },","        console: consoleMockup,","        window:  {}","      };","  try {","    vm.runInNewContext (source, sandbox);","    delete sandbox.angular;","    delete sandbox.console;","    delete sandbox.window;","    // Check if the sandbox contains any property at all.","    /*jshint unused:false */","    for (var prop in sandbox)","      throw sandbox;","    return false;","  }","  catch (e) {","    // Code execution failed with an undefined reference or at least one new variable of function has been added to","    // the global scope.","    delete sandbox.angular;","    delete sandbox.console;","    delete sandbox.window;","    return sandbox;","  }","};","",""],"l":{"21":1,"23":0,"24":0,"59":0,"64":0,"65":0,"66":0,"67":0,"68":0,"71":0,"72":0,"73":0,"78":0,"79":0,"80":0,"81":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sourceExtract.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sourceExtract.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":1,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":1,"49":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":184,"loc":{"start":{"line":184,"column":30},"end":{"line":185,"column":0}}},"2":{"name":"(anonymous_2)","line":233,"loc":{"start":{"line":233,"column":34},"end":{"line":234,"column":0}}},"3":{"name":"(anonymous_3)","line":243,"loc":{"start":{"line":243,"column":31},"end":{"line":244,"column":0}}},"4":{"name":"(anonymous_4)","line":266,"loc":{"start":{"line":266,"column":25},"end":{"line":267,"column":0}}},"5":{"name":"(anonymous_5)","line":282,"loc":{"start":{"line":282,"column":36},"end":{"line":283,"column":0}}},"6":{"name":"(anonymous_6)","line":292,"loc":{"start":{"line":292,"column":23},"end":{"line":293,"column":0}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":35}},"2":{"start":{"line":15,"column":0},"end":{"line":16,"column":27}},"3":{"start":{"line":85,"column":0},"end":{"line":89,"column":2}},"4":{"start":{"line":100,"column":0},"end":{"line":100,"column":56}},"5":{"start":{"line":107,"column":0},"end":{"line":107,"column":95}},"6":{"start":{"line":114,"column":0},"end":{"line":114,"column":106}},"7":{"start":{"line":119,"column":0},"end":{"line":119,"column":53}},"8":{"start":{"line":124,"column":0},"end":{"line":124,"column":87}},"9":{"start":{"line":129,"column":0},"end":{"line":129,"column":57}},"10":{"start":{"line":134,"column":0},"end":{"line":134,"column":37}},"11":{"start":{"line":139,"column":0},"end":{"line":139,"column":88}},"12":{"start":{"line":145,"column":0},"end":{"line":145,"column":95}},"13":{"start":{"line":161,"column":0},"end":{"line":162,"column":93}},"14":{"start":{"line":172,"column":0},"end":{"line":172,"column":36}},"15":{"start":{"line":184,"column":0},"end":{"line":226,"column":2}},"16":{"start":{"line":186,"column":2},"end":{"line":189,"column":20}},"17":{"start":{"line":190,"column":2},"end":{"line":190,"column":80}},"18":{"start":{"line":191,"column":2},"end":{"line":191,"column":18}},"19":{"start":{"line":194,"column":2},"end":{"line":196,"column":19}},"20":{"start":{"line":195,"column":4},"end":{"line":196,"column":19}},"21":{"start":{"line":196,"column":6},"end":{"line":196,"column":19}},"22":{"start":{"line":199,"column":2},"end":{"line":200,"column":16}},"23":{"start":{"line":200,"column":4},"end":{"line":200,"column":16}},"24":{"start":{"line":201,"column":2},"end":{"line":202,"column":26}},"25":{"start":{"line":203,"column":2},"end":{"line":211,"column":3}},"26":{"start":{"line":204,"column":4},"end":{"line":205,"column":53}},"27":{"start":{"line":205,"column":6},"end":{"line":205,"column":53}},"28":{"start":{"line":206,"column":4},"end":{"line":210,"column":5}},"29":{"start":{"line":207,"column":6},"end":{"line":209,"column":56}},"30":{"start":{"line":208,"column":8},"end":{"line":208,"column":24}},"31":{"start":{"line":209,"column":11},"end":{"line":209,"column":56}},"32":{"start":{"line":212,"column":2},"end":{"line":212,"column":28}},"33":{"start":{"line":213,"column":2},"end":{"line":225,"column":4}},"34":{"start":{"line":233,"column":0},"end":{"line":236,"column":2}},"35":{"start":{"line":235,"column":2},"end":{"line":235,"column":85}},"36":{"start":{"line":243,"column":0},"end":{"line":258,"column":2}},"37":{"start":{"line":246,"column":2},"end":{"line":246,"column":8}},"38":{"start":{"line":247,"column":2},"end":{"line":256,"column":3}},"39":{"start":{"line":249,"column":4},"end":{"line":255,"column":6}},"40":{"start":{"line":257,"column":2},"end":{"line":257,"column":15}},"41":{"start":{"line":266,"column":0},"end":{"line":275,"column":2}},"42":{"start":{"line":268,"column":2},"end":{"line":268,"column":33}},"43":{"start":{"line":270,"column":2},"end":{"line":270,"column":36}},"44":{"start":{"line":272,"column":2},"end":{"line":272,"column":47}},"45":{"start":{"line":274,"column":2},"end":{"line":274,"column":38}},"46":{"start":{"line":282,"column":0},"end":{"line":285,"column":2}},"47":{"start":{"line":284,"column":2},"end":{"line":284,"column":49}},"48":{"start":{"line":292,"column":0},"end":{"line":295,"column":2}},"49":{"start":{"line":294,"column":2},"end":{"line":294,"column":83}}},"branchMap":{"1":{"line":195,"type":"if","locations":[{"start":{"line":195,"column":4},"end":{"line":195,"column":4}},{"start":{"line":195,"column":4},"end":{"line":195,"column":4}}]},"2":{"line":195,"type":"binary-expr","locations":[{"start":{"line":195,"column":8},"end":{"line":195,"column":27}},{"start":{"line":195,"column":31},"end":{"line":195,"column":64}}]},"3":{"line":199,"type":"if","locations":[{"start":{"line":199,"column":2},"end":{"line":199,"column":2}},{"start":{"line":199,"column":2},"end":{"line":199,"column":2}}]},"4":{"line":204,"type":"if","locations":[{"start":{"line":204,"column":4},"end":{"line":204,"column":4}},{"start":{"line":204,"column":4},"end":{"line":204,"column":4}}]},"5":{"line":206,"type":"if","locations":[{"start":{"line":206,"column":4},"end":{"line":206,"column":4}},{"start":{"line":206,"column":4},"end":{"line":206,"column":4}}]},"6":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":6},"end":{"line":207,"column":6}},{"start":{"line":207,"column":6},"end":{"line":207,"column":6}}]},"7":{"line":212,"type":"binary-expr","locations":[{"start":{"line":212,"column":10},"end":{"line":212,"column":21}},{"start":{"line":212,"column":25},"end":{"line":212,"column":26}}]},"8":{"line":217,"type":"binary-expr","locations":[{"start":{"line":217,"column":14},"end":{"line":217,"column":28}},{"start":{"line":218,"column":16},"end":{"line":223,"column":17}},{"start":{"line":223,"column":21},"end":{"line":223,"column":23}}]},"9":{"line":247,"type":"if","locations":[{"start":{"line":247,"column":2},"end":{"line":247,"column":2}},{"start":{"line":247,"column":2},"end":{"line":247,"column":2}}]}},"code":["/**"," * A javascript source code extraction library."," *"," * @module lib/sourceExtract"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('./gruntUtil');","","var tokenize = util.tokenize","  , sprintf = util.sprintf;","","//------------------------------------------------------------------------------","// TYPES","//------------------------------------------------------------------------------","","/**"," * @name ModuleClosureInfo"," * Information about a module definition enclosed in a self-calling function."," * Source code syntax:"," * <code>"," * (function (x) {"," *   ..."," * })(angular.module(...));"," * </code>"," *//**"," * @name ModuleClosureInfo#moduleVar"," * Name of the closure parameter that receives a reference to the module."," * @type {string}"," *//**"," * @name ModuleClosureInfo#closureBody"," * Source code inside the closure."," * @type {string}"," *//**"," * @name ModuleClosureInfo#moduleDecl"," * Module declaration expression (<code>angular.module(...)</code>)."," * @type {string}"," *//**"," * @name ModuleClosureInfo#moduleName"," * The name of the module being declared."," * @type {string}"," *//**"," * @name ModuleClosureInfo#moduleDeps"," * List of module dependencies."," * @type {string}"," */","","/**"," * @name ModuleHeaderInfo"," * Information parsed from a module reference with the syntax:"," * <code>angular.module('name',[])</code> or"," * <code>angular.module('name')</code>."," *//**"," * @name ModuleHeaderInfo#status"," * The result status."," * @type {EXTRACT_STAT}"," *//**"," * @name ModuleHeaderInfo#name"," * Module name."," * @type {string}"," *//**"," * @name ModuleHeaderInfo#requires"," * List of module dependencies."," * @type {string[]|undefined}"," *//**"," * @name ModuleHeaderInfo#append"," * If <code>false</code> this module reference is declaring the module and its dependencies."," * If <code>true</code> this module reference is appending definitions to a module declared elsewhere."," * @type {boolean}"," *//**"," * @name ModuleHeaderInfo#configFn"," * Third parameter of a module declaration, if present."," * @type {string|undefined}"," */","","/**"," * Error codes returned by some functions of the sourceTrans module."," * @enum"," */","var EXTRACT_STAT = {","  OK:               0,","  MULTIPLE_MODULES: -1,","  MULTIPLE_DECLS:   -2","};","","//------------------------------------------------------------------------------","// PRIVATE DATA","//------------------------------------------------------------------------------","","/**"," * Matches a comment block preceding a module definition."," * This allows excluding module definitions thar lie inside comment blocks."," * @type {string}"," */","var MATCH_LEADING_COMMENT = '(/`*(?:(?!/`*)[`s`S])*?)?';","/**"," * Regular expression string that matches an angular module declaration in one of these formats:"," * angular.module('name',[dependencies]) or"," * angular.module('name')"," * @type {string}"," */","var MODULE_DECL_EXP = 'angular `. module `( [\"\\'](.*?)[\"\\'] (?:, (`[[^`]]*`]))? (,[`s`S]+)?`)';","/**"," * Regular expression string that matches the start of a declaration for a specific module."," * <MOD> is replaced by the module name being extracted before the RegExp is compiled."," * This also captures whether there is a variable assignment preceding the module declaration."," * @type {string}"," */","var MODULE_EXTR_EXP = '(= )?angular `. module `( [\"\\']<MOD>[\"\\'] (?:, `[[`s`S]*?`])? (,[`s`S]+)?`)( ; )?';","/**"," * Regular expression string that matches javascript block/line comments."," * @type {string}"," */","var MATCH_COMMENTS_EXP = '(`/`*[`s`S]*?`*`/|`/`/.*)';","/**"," * Matches source code consisting only of white space and javascript comments."," * @type {RegExp}"," */","var MATCH_NO_SCRIPT = new RegExp (tokenize (sprintf ('^ (% )*$', MATCH_COMMENTS_EXP)));","/**"," * Allows the removal of /* block comments and // line comments to ensure JSON.parse() success."," * @type {RegExp}"," */","var MATCH_COMMENT_BLOCKS = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$|/gm;","/**"," * Allows the removal of trailing commas to ensure JSON.parse() success."," * @type {RegExp}"," */","var MATCH_LAST_COMMA = /,(?=\\s*\\]$)/;","/**"," * Matches white space and javascript comments at the beginning of a file."," * @type {RegExp}"," */","var TRIM_COMMENTS_TOP = new RegExp (tokenize (sprintf ('^ (% )*', MATCH_COMMENTS_EXP)));","/**"," * Matches white space and javascript comments at the end of a file."," * @type {RegExp}"," */","//Note: max.limit of 3 prevents infinite matching and thread lockup.","var TRIM_COMMENTS_BOTTOM = new RegExp (tokenize (sprintf (' (% ){0,3}$', MATCH_COMMENTS_EXP)));","/**"," * Matches a self-invoking anonymous function that wraps all the remaining source code."," * It assumes white space and comments have been already removed from both ends of the script."," * It searches for one of these patterns:"," * <code>"," * (function () { ... }) ();"," * function (var) { ... }) (angular.module('name'));"," * function (var) { ... }) (angular.module('name', [dependencies]));"," * </code>"," * It also matches the following alternate self-invoking function syntax applied to any of the previous patterns:"," * <code>"," * !function () { ... } ();"," * </code>"," * @type {RegExp}"," */","var MATCH_MODULE_CLOSURE = new RegExp (tokenize (sprintf (","  '^[`(!]function `( (.+?)? `) `{ ([`s`S]*?) `} `)? `( (%)? `) ;?$', MODULE_DECL_EXP)), 'i');","","//------------------------------------------------------------------------------","// PUBLIC","//------------------------------------------------------------------------------","","/**"," * Error codes returned by some functions of the sourceExtract module."," * @type {EXTRACT_STAT}"," */","exports.EXTRACT_STAT = EXTRACT_STAT;","","/**"," * Searches for an angular module declaration and, if found, extracts the module's name and dependencies from it."," * Note: if the returned 'requires' property is undefined, that means the module declaration is appending"," * definitions to a module defined elsewhere."," * Otherwise, the module declaration is beginning the module definition."," *"," * @param {string} source Javascript source code."," * @returns {ModuleHeaderInfo|null} Null means the file does not contain any"," * module definition."," */","exports.extractModuleHeader = function (source)","{","  var LEADING_COMMENT = 1","    , MODULE_NAME = 2","    , MODULE_DEPS = 3","    , CONFIG_FN = 4;","  var R = new RegExp (tokenize (MATCH_LEADING_COMMENT + MODULE_DECL_EXP), 'ig');","  var all = [], m;","","  // Collect all matches but exclude declarations inside comment blocks.","  while ((m = R.exec (source)) !== null)","    if (!m[LEADING_COMMENT] || m[LEADING_COMMENT].match (/\\*\\//))","      all.push (m);","","  // Ignore the file if it has no angular module definition.","  if (!all.length)","    return null;","  var moduleName = all[0][MODULE_NAME]","    , headerIndex = false;","  for (var i = 0, x = all.length; i < x; ++i) {","    if (all[i][MODULE_NAME] !== moduleName)","      return {status: EXTRACT_STAT.MULTIPLE_MODULES};","    if (all[i][MODULE_DEPS] !== undefined) {","      if (headerIndex === false)","        headerIndex = i;","      else return {status: EXTRACT_STAT.MULTIPLE_DECLS};","    }","  }","  m = all[headerIndex || 0];","  return /** @type {ModuleHeaderInfo} */ {","    status:   EXTRACT_STAT.OK,","    name:     moduleName,","    append:   headerIndex === false,","    requires: m[MODULE_DEPS] &&","                JSON.parse (","                  m[MODULE_DEPS]","                    .replace (MATCH_COMMENT_BLOCKS, '')","                    .replace (MATCH_LAST_COMMA, '')","                    .replace (/'/g, '\"')","                ) || [],","    configFn: m[CONFIG_FN]","  };","};","","/**"," * Returns a regular expression that matches the start of a declaration for a specific module."," * @param {string} moduleName"," * @returns {RegExp}"," */","exports.moduleExtractionPattern = function (moduleName)","{","  return new RegExp (tokenize (MODULE_EXTR_EXP.replace ('<MOD>', moduleName), 'ig'));","};","","/**"," * If the give source code consists only of a module-defining closure, returns information about that closure."," * @param {string} source"," * @returns {ModuleClosureInfo|boolean} False if no closure was found or if there is more code besides the closure."," */","exports.getModuleClosureInfo = function (source)","{","  /** @type {Array.<string>} */","  var m;","  if ((m = source.match (MATCH_MODULE_CLOSURE))) {","    // Extract the function's body and some additional information about the module and how it's being declared.","    return /** @type {ModuleClosureInfo} */{","      moduleVar:   m[1],","      closureBody: m[2],","      moduleDecl:  m[3],","      moduleName:  m[4],","      moduleDeps:  m[5]","    };","  }","  return false;","};","","/**"," * Remove the existing closure from the source code."," * @param {string} source The original source code."," * @param {string} clean Source code with white space and comments trimmed from both ends."," * @param {string} closureBody The full closure source code."," */","exports.extractClosure = function (source, clean, closureBody)","{","  var p = source.indexOf (clean);","  // Extract any comments found before the closure.","  var before = source.substr (0, p);","  // Extract any comments found after the closure.","  var after = source.substr (p + clean.length);","","  return before + closureBody + after;","};","","/**"," * Checks if the given source code consists only of white space and javascript comments."," * @param {string} source"," * @returns {boolean}"," */","exports.matchWhiteSpaceOrComments = function (source)","{","  return source.match (MATCH_NO_SCRIPT) !== null;","};","","/**"," * Returns the given ource code with all white space and comments removed from both ends."," * @param {string} source"," * @returns {string}"," */","exports.trimComments = function (source)","{","  return source.replace (TRIM_COMMENTS_TOP, '').replace (TRIM_COMMENTS_BOTTOM, '');","};","",""],"l":{"13":1,"15":1,"85":1,"100":1,"107":1,"114":1,"119":1,"124":1,"129":1,"134":1,"139":1,"145":1,"161":1,"172":1,"184":1,"186":0,"190":0,"191":0,"194":0,"195":0,"196":0,"199":0,"200":0,"201":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"212":0,"213":0,"233":1,"235":0,"243":1,"246":0,"247":0,"249":0,"257":0,"266":1,"268":0,"270":0,"272":0,"274":0,"282":1,"284":0,"292":1,"294":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sourceTrans.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/lib/sourceTrans.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":1,"25":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":68,"loc":{"start":{"line":68,"column":19},"end":{"line":69,"column":0}}},"2":{"name":"(anonymous_2)","line":115,"loc":{"start":{"line":115,"column":32},"end":{"line":116,"column":0}}},"3":{"name":"(anonymous_3)","line":131,"loc":{"start":{"line":131,"column":30},"end":{"line":132,"column":0}}},"4":{"name":"(anonymous_4)","line":136,"loc":{"start":{"line":136,"column":38},"end":{"line":137,"column":2}}},"5":{"name":"(anonymous_5)","line":151,"loc":{"start":{"line":151,"column":35},"end":{"line":152,"column":0}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":15,"column":35}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}},"3":{"start":{"line":27,"column":0},"end":{"line":32,"column":2}},"4":{"start":{"line":44,"column":0},"end":{"line":44,"column":37}},"5":{"start":{"line":54,"column":0},"end":{"line":54,"column":32}},"6":{"start":{"line":68,"column":0},"end":{"line":101,"column":2}},"7":{"start":{"line":74,"column":2},"end":{"line":74,"column":50}},"8":{"start":{"line":77,"column":2},"end":{"line":77,"column":59}},"9":{"start":{"line":80,"column":2},"end":{"line":98,"column":3}},"10":{"start":{"line":83,"column":4},"end":{"line":84,"column":111}},"11":{"start":{"line":84,"column":6},"end":{"line":84,"column":111}},"12":{"start":{"line":87,"column":4},"end":{"line":87,"column":79}},"13":{"start":{"line":91,"column":4},"end":{"line":96,"column":8}},"14":{"start":{"line":93,"column":6},"end":{"line":96,"column":8}},"15":{"start":{"line":97,"column":4},"end":{"line":97,"column":80}},"16":{"start":{"line":100,"column":2},"end":{"line":100,"column":78}},"17":{"start":{"line":115,"column":0},"end":{"line":119,"column":2}},"18":{"start":{"line":117,"column":2},"end":{"line":117,"column":60}},"19":{"start":{"line":118,"column":2},"end":{"line":118,"column":25}},"20":{"start":{"line":131,"column":0},"end":{"line":140,"column":2}},"21":{"start":{"line":134,"column":2},"end":{"line":134,"column":72}},"22":{"start":{"line":136,"column":2},"end":{"line":139,"column":5}},"23":{"start":{"line":138,"column":4},"end":{"line":138,"column":88}},"24":{"start":{"line":151,"column":0},"end":{"line":154,"column":2}},"25":{"start":{"line":153,"column":2},"end":{"line":153,"column":94}}},"branchMap":{"1":{"line":80,"type":"if","locations":[{"start":{"line":80,"column":2},"end":{"line":80,"column":2}},{"start":{"line":80,"column":2},"end":{"line":80,"column":2}}]},"2":{"line":83,"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":83,"column":4}},{"start":{"line":83,"column":4},"end":{"line":83,"column":4}}]},"3":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":8},"end":{"line":83,"column":26}},{"start":{"line":83,"column":30},"end":{"line":83,"column":63}}]},"4":{"line":91,"type":"if","locations":[{"start":{"line":91,"column":4},"end":{"line":91,"column":4}},{"start":{"line":91,"column":4},"end":{"line":91,"column":4}}]},"5":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":8},"end":{"line":91,"column":25}},{"start":{"line":91,"column":29},"end":{"line":91,"column":47}},{"start":{"line":91,"column":51},"end":{"line":91,"column":82}}]},"6":{"line":118,"type":"binary-expr","locations":[{"start":{"line":118,"column":9},"end":{"line":118,"column":16}},{"start":{"line":118,"column":20},"end":{"line":118,"column":24}}]},"7":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":12},"end":{"line":138,"column":18}},{"start":{"line":138,"column":22},"end":{"line":138,"column":24}}]},"8":{"line":138,"type":"cond-expr","locations":[{"start":{"line":138,"column":52},"end":{"line":138,"column":54}},{"start":{"line":138,"column":57},"end":{"line":138,"column":86}}]},"9":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":29},"end":{"line":138,"column":38}},{"start":{"line":138,"column":42},"end":{"line":138,"column":49}}]},"10":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":70},"end":{"line":138,"column":79}},{"start":{"line":138,"column":83},"end":{"line":138,"column":85}}]}},"code":["/**"," * A javascript source code transformation library."," *"," * @module lib/sourceTrans"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var sandboxRun = require ('./sandboxRun')","  , sourceExtract = require ('./sourceExtract')","  , util = require ('./gruntUtil');","","var sprintf = util.sprintf;","","//------------------------------------------------------------------------------","// TYPES","//------------------------------------------------------------------------------","","/**"," * Error codes returned by some functions of the sourceTrans module."," * @enum"," */","var TRANS_STAT = {","  OK:                  0,","  NO_CLOSURE_FOUND:    -1,","  RENAME_REQUIRED:     -2,","  INVALID_DECLARATION: -3","};","","//------------------------------------------------------------------------------","// PRIVATE","//------------------------------------------------------------------------------","","/**"," * Regular expression string that matches a javascript identifier."," * Note: % will be replaced by the identifier."," * Note: this is a poor man's identifier matcher! It may fail in many situations."," * @type {string}"," */","var MATCH_IDENTIFIER_EXP = '\\\\b%\\\\b';","","//------------------------------------------------------------------------------","// PUBLIC","//------------------------------------------------------------------------------","","/**"," * Error codes returned by some functions of the sourceTrans module."," * @type {TRANS_STAT}"," */","exports.TRANS_STAT = TRANS_STAT;","","/**"," * Optimizes the source code and also performs some checks on it, preparing it for a subsequent"," * concatenation with other files from the same module."," * If the source is already wrapping code in a self-invoking function, it unwraps it and renames module"," * references to match a future re-wrapping."," * Then it replaces references to angular.module(name) by a shorter form."," *"," * @param {string} source"," * @param {string} moduleName"," * @param {string} moduleVar"," * @returns {OperationResult} Either the optimized source code or a status code if no optimization was performed."," */","exports.optimize = function (source, moduleName, moduleVar)","{","  /**","   * Source code with all white space and comments removed from both ends.","   * @type {string}","   */","  var clean = sourceExtract.trimComments (source);","","  // Extract the function's body and some additional information about the module and how it's being declared.","  var modInfo = sourceExtract.getModuleClosureInfo (clean);","","  // Check if the script already encloses code inside a self-invoking closure.","  if (modInfo) {","","    // Sanity check.","    if (modInfo.moduleName && modInfo.moduleName !== moduleName)","      return /** @type {OperationResult} */ {status: TRANS_STAT.INVALID_DECLARATION, data: modInfo.moduleName};","","    // Let's get that closure.","    source = sourceExtract.extractClosure (source, clean, modInfo.closureBody);","","    // If the angular module is already being passed as a parameter to the closure, and that parameter has a different","    // name from the preset name for module references, rename that parameter to the predefined name.","    if (modInfo.moduleVar && modInfo.moduleDecl && modInfo.moduleVar !== moduleVar)","    // Let the caller decide what to do.","      return /** @type {OperationResult} */ {","        status: TRANS_STAT.RENAME_REQUIRED,","        data:   modInfo","      };","    return /** @type {OperationResult} */ {status: TRANS_STAT.OK, data: source};","  }","  // No closure was detected.","  return /** @type {OperationResult} */ {status: TRANS_STAT.NO_CLOSURE_FOUND};","};","","","/**"," * The script has no self-invoking closure for a module definition."," * Check if there is code (other than a module definition) lying at a root level on the script, like,"," * for instance, private functions."," * That kind of code would behave differently between a release and a debug build, as in a release build"," * it will be wrapped in a self-invoking closure but, on a debug build, it will not."," *"," * @param {string} source"," * @returns {Object|boolean} <code>True</code> if the source code is valid, otherwise an Object containing the detected"," * symbols created in the global scope."," */","exports.validateUnwrappedCode = function (source)","{","  var sandbox = sandboxRun.detectInvalidSourceCode (source);","  return sandbox || true;","};","","/**"," * Replace angular module reference expressions (with syntax <code>angular.module(...)</code>) inside the closure by"," * variable references."," * If the module expression defines no services/whatever, remove-it, as it will be regenerated outside the closure."," *"," * @param {ModuleDef} module"," * @param {string} source"," * @param {string} moduleVar Variable name for module references."," * @returns {string}"," */","exports.renameModuleRefExps = function (module, source, moduleVar)","{","  /** Matches the start of a declaration for the current module.*/","  var declPattern = sourceExtract.moduleExtractionPattern (module.name);","","  return source.replace (declPattern, function (decl, assign, configFn, semicolon)","  {","    return (assign || '') + (semicolon && !assign ? '' : moduleVar + (semicolon || ''));","  });","};","","/**"," * Renames angular module variable references inside the closure."," * If the module expression defines no services/whatever, remove-it, as it will be regenerated outside the closure."," *"," * @param {string} source"," * @param {string} oldVar Old variable name for module references."," * @param {string} moduleVar Variable name for module references."," * @returns {string}"," */","exports.renameModuleVariableRefs = function (source, oldVar, moduleVar)","{","  return source.replace (new RegExp (sprintf (MATCH_IDENTIFIER_EXP, oldVar), 'g'), moduleVar);","};"],"l":{"13":1,"17":1,"27":1,"44":1,"54":1,"68":1,"74":0,"77":0,"80":0,"83":0,"84":0,"87":0,"91":0,"93":0,"97":0,"100":0,"115":1,"117":0,"118":0,"131":1,"134":0,"136":0,"138":0,"151":1,"153":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/analyzeSourceCode.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/analyzeSourceCode.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"AnalyzeSourceCodeMiddleware","line":33,"loc":{"start":{"line":33,"column":0},"end":{"line":34,"column":0}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":42,"column":2}}},"3":{"name":"(anonymous_3)","line":46,"loc":{"start":{"line":46,"column":17},"end":{"line":47,"column":4}}},"4":{"name":"(anonymous_4)","line":72,"loc":{"start":{"line":72,"column":15},"end":{"line":73,"column":2}}},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":15},"end":{"line":79,"column":2}}},"6":{"name":"setupModuleInfo","line":95,"loc":{"start":{"line":95,"column":2},"end":{"line":96,"column":2}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":49}},"2":{"start":{"line":15,"column":0},"end":{"line":17,"column":53}},"3":{"start":{"line":19,"column":0},"end":{"line":24,"column":17}},"4":{"start":{"line":33,"column":0},"end":{"line":142,"column":1}},"5":{"start":{"line":35,"column":2},"end":{"line":35,"column":28}},"6":{"start":{"line":41,"column":2},"end":{"line":70,"column":4}},"7":{"start":{"line":43,"column":4},"end":{"line":43,"column":62}},"8":{"start":{"line":46,"column":4},"end":{"line":68,"column":7}},"9":{"start":{"line":49,"column":6},"end":{"line":52,"column":7}},"10":{"start":{"line":50,"column":8},"end":{"line":50,"column":55}},"11":{"start":{"line":51,"column":8},"end":{"line":51,"column":15}},"12":{"start":{"line":54,"column":6},"end":{"line":54,"column":42}},"13":{"start":{"line":55,"column":6},"end":{"line":55,"column":68}},"14":{"start":{"line":57,"column":6},"end":{"line":67,"column":56}},"15":{"start":{"line":58,"column":8},"end":{"line":61,"column":9}},"16":{"start":{"line":59,"column":10},"end":{"line":59,"column":46}},"17":{"start":{"line":60,"column":10},"end":{"line":60,"column":17}},"18":{"start":{"line":62,"column":8},"end":{"line":65,"column":11}},"19":{"start":{"line":67,"column":11},"end":{"line":67,"column":56}},"20":{"start":{"line":72,"column":2},"end":{"line":76,"column":4}},"21":{"start":{"line":78,"column":2},"end":{"line":82,"column":4}},"22":{"start":{"line":95,"column":2},"end":{"line":140,"column":3}},"23":{"start":{"line":97,"column":4},"end":{"line":97,"column":42}},"24":{"start":{"line":98,"column":4},"end":{"line":139,"column":5}},"25":{"start":{"line":103,"column":8},"end":{"line":103,"column":56}},"26":{"start":{"line":105,"column":8},"end":{"line":112,"column":78}},"27":{"start":{"line":106,"column":10},"end":{"line":106,"column":90}},"28":{"start":{"line":108,"column":13},"end":{"line":112,"column":78}},"29":{"start":{"line":109,"column":10},"end":{"line":109,"column":17}},"30":{"start":{"line":111,"column":13},"end":{"line":112,"column":78}},"31":{"start":{"line":112,"column":10},"end":{"line":112,"column":78}},"32":{"start":{"line":114,"column":8},"end":{"line":127,"column":9}},"33":{"start":{"line":115,"column":10},"end":{"line":115,"column":43}},"34":{"start":{"line":117,"column":10},"end":{"line":117,"column":43}},"35":{"start":{"line":121,"column":10},"end":{"line":122,"column":85}},"36":{"start":{"line":122,"column":12},"end":{"line":122,"column":85}},"37":{"start":{"line":123,"column":10},"end":{"line":123,"column":36}},"38":{"start":{"line":125,"column":10},"end":{"line":125,"column":46}},"39":{"start":{"line":126,"column":10},"end":{"line":126,"column":50}},"40":{"start":{"line":128,"column":8},"end":{"line":128,"column":48}},"41":{"start":{"line":129,"column":8},"end":{"line":129,"column":14}},"42":{"start":{"line":133,"column":8},"end":{"line":133,"column":117}},"43":{"start":{"line":134,"column":8},"end":{"line":134,"column":14}},"44":{"start":{"line":138,"column":8},"end":{"line":138,"column":116}}},"branchMap":{"1":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":49,"column":6}},{"start":{"line":49,"column":6},"end":{"line":49,"column":6}}]},"2":{"line":57,"type":"if","locations":[{"start":{"line":57,"column":6},"end":{"line":57,"column":6}},{"start":{"line":57,"column":6},"end":{"line":57,"column":6}}]},"3":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":8},"end":{"line":58,"column":8}},{"start":{"line":58,"column":8},"end":{"line":58,"column":8}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":12},"end":{"line":58,"column":36}},{"start":{"line":58,"column":40},"end":{"line":58,"column":110}}]},"5":{"line":98,"type":"switch","locations":[{"start":{"line":100,"column":6},"end":{"line":129,"column":14}},{"start":{"line":131,"column":6},"end":{"line":134,"column":14}},{"start":{"line":136,"column":6},"end":{"line":138,"column":116}}]},"6":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"7":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":13},"end":{"line":108,"column":13}},{"start":{"line":108,"column":13},"end":{"line":108,"column":13}}]},"8":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":13},"end":{"line":111,"column":13}},{"start":{"line":111,"column":13},"end":{"line":111,"column":13}}]},"9":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":17},"end":{"line":111,"column":28}},{"start":{"line":111,"column":32},"end":{"line":111,"column":52}}]},"10":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":8},"end":{"line":114,"column":8}},{"start":{"line":114,"column":8},"end":{"line":114,"column":8}}]},"11":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":10},"end":{"line":121,"column":10}},{"start":{"line":121,"column":10},"end":{"line":121,"column":10}}]}},"code":["/**"," * An AngularJS source code loader and analyser."," *"," * @module middleware/analyzeSourceCode"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","exports.middleware = AnalyzeSourceCodeMiddleware;","","var util = require ('../lib/gruntUtil')","  , types = require ('../lib/types')","  , sourceExtract = require ('../lib/sourceExtract');","","var ModuleDef = types.ModuleDef","  , warn = util.warn","  , reportErrorLocation = util.reportErrorLocation","  , fatal = util.fatal","  , info = util.info","  , NL = util.NL;","","/**"," * An AngularJS source code loader and analyser middleware."," *"," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function AnalyzeSourceCodeMiddleware (context)","{","  var grunt = context.grunt;","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    var src = util.sortFilesBeforeSubfolders (filesArray.src);","","    // Load the script files and scan them for module definitions.","    src.forEach (function (path)","    {","","      if (!grunt.file.exists (path)) {","        warn ('Source file \"' + path + '\" not found.');","        return;","      }","      // Read the script and scan it for a module declaration.","      var script = grunt.file.read (path);","      var moduleHeader = sourceExtract.extractModuleHeader (script);","      // Ignore irrelevant files.","      if (!moduleHeader) {","        if (!filesArray.forceInclude || !grunt.file.isMatch ({matchBase: true}, filesArray.forceInclude, path)) {","          info ('Ignored file: %', path.cyan);","          return;","        }","        context.standaloneScripts.push ({","          path:    path,","          content: script","        });","      }","      else setupModuleInfo (moduleHeader, script, path);","    });","","  };","","  this.trace = function (module)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Store information about the specified module retrieved from the given source code on the specified file.","   *","   * @param {ModuleHeaderInfo} moduleHeader","   * @param {string} fileContent","   * @param {string} filePath","   */","  function setupModuleInfo (moduleHeader, fileContent, filePath)","  {","    var STAT = sourceExtract.EXTRACT_STAT;","    switch (moduleHeader.status) {","","      case STAT.OK:","","        // Get information about the specified module.","        var module = context.modules[moduleHeader.name];","        // If this is the first time a specific module is mentioned, create the respective information record.","        if (!module)","          module = context.modules[moduleHeader.name] = new ModuleDef (moduleHeader.name);","        // Skip the file if it defines an external module.","        else if (module.external)","          return;","        // Reject additional attempts to redeclare a module (only appending is allowed).","        else if (module.head && !moduleHeader.append)","          fatal ('Can\\'t redeclare module <cyan>%</cyan>', moduleHeader.name);","        // The file is appending definitions to a module declared elsewhere.","        if (moduleHeader.append) {","          module.bodies.push (fileContent);","          // Append the file path to the bottom of the paths list.","          module.filePaths.push (filePath);","        }","        // Otherwise, the file contains a module declaration.","        else {","          if (module.head)","            fatal ('Duplicate module definition: <cyan>%</cyan>', moduleHeader.name);","          module.head = fileContent;","          // Add the file path to the top of the paths list.","          module.filePaths.unshift (filePath);","          module.requires = moduleHeader.requires;","        }","        module.configFn = moduleHeader.configFn;","        break;","","      case STAT.MULTIPLE_MODULES:","","        warn ('Definitions for multiple modules were found on the same file.' + NL + reportErrorLocation (filePath));","        break;","","      case STAT.MULTIPLE_DECLS:","","        warn ('More than one module declaration was found on the same file.' + NL + reportErrorLocation (filePath));","    }","  }","","}",""],"l":{"13":1,"15":1,"19":1,"33":1,"35":0,"41":0,"43":0,"46":0,"49":0,"50":0,"51":0,"54":0,"55":0,"57":0,"58":0,"59":0,"60":0,"62":0,"67":0,"72":0,"78":0,"95":1,"97":0,"98":0,"103":0,"105":0,"106":0,"108":0,"109":0,"111":0,"112":0,"114":0,"115":0,"117":0,"121":0,"122":0,"123":0,"125":0,"126":0,"128":0,"129":0,"133":0,"134":0,"138":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/buildAssets.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/buildAssets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"BuildAssetsOptions","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":28,"column":0}}},"2":{"name":"BuildAssetsMiddleware","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":80,"column":0}}},"3":{"name":"(anonymous_3)","line":96,"loc":{"start":{"line":96,"column":17},"end":{"line":97,"column":2}}},"4":{"name":"(anonymous_4)","line":102,"loc":{"start":{"line":102,"column":15},"end":{"line":103,"column":2}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":15},"end":{"line":109,"column":2}}},"6":{"name":"(anonymous_6)","line":115,"loc":{"start":{"line":115,"column":25},"end":{"line":116,"column":4}}},"7":{"name":"scan","line":134,"loc":{"start":{"line":134,"column":2},"end":{"line":135,"column":2}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":15,"column":24}},"2":{"start":{"line":17,"column":0},"end":{"line":17,"column":60}},"3":{"start":{"line":27,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":30,"column":0},"end":{"line":54,"column":2}},"5":{"start":{"line":59,"column":0},"end":{"line":65,"column":2}},"6":{"start":{"line":67,"column":0},"end":{"line":67,"column":42}},"7":{"start":{"line":71,"column":0},"end":{"line":71,"column":43}},"8":{"start":{"line":79,"column":0},"end":{"line":157,"column":1}},"9":{"start":{"line":81,"column":2},"end":{"line":82,"column":39}},"10":{"start":{"line":90,"column":2},"end":{"line":90,"column":26}},"11":{"start":{"line":96,"column":2},"end":{"line":100,"column":4}},"12":{"start":{"line":102,"column":2},"end":{"line":106,"column":4}},"13":{"start":{"line":108,"column":2},"end":{"line":121,"column":4}},"14":{"start":{"line":110,"column":4},"end":{"line":110,"column":33}},"15":{"start":{"line":110,"column":26},"end":{"line":110,"column":33}},"16":{"start":{"line":112,"column":4},"end":{"line":112,"column":96}},"17":{"start":{"line":113,"column":4},"end":{"line":113,"column":29}},"18":{"start":{"line":113,"column":22},"end":{"line":113,"column":29}},"19":{"start":{"line":114,"column":4},"end":{"line":114,"column":49}},"20":{"start":{"line":115,"column":4},"end":{"line":119,"column":7}},"21":{"start":{"line":117,"column":6},"end":{"line":117,"column":43}},"22":{"start":{"line":118,"column":6},"end":{"line":118,"column":54}},"23":{"start":{"line":134,"column":2},"end":{"line":155,"column":3}},"24":{"start":{"line":136,"column":4},"end":{"line":136,"column":14}},"25":{"start":{"line":137,"column":4},"end":{"line":154,"column":5}},"26":{"start":{"line":138,"column":6},"end":{"line":138,"column":25}},"27":{"start":{"line":139,"column":6},"end":{"line":153,"column":7}},"28":{"start":{"line":140,"column":8},"end":{"line":142,"column":66}},"29":{"start":{"line":143,"column":8},"end":{"line":144,"column":112}},"30":{"start":{"line":144,"column":10},"end":{"line":144,"column":112}},"31":{"start":{"line":145,"column":8},"end":{"line":147,"column":48}},"32":{"start":{"line":146,"column":10},"end":{"line":146,"column":19}},"33":{"start":{"line":147,"column":13},"end":{"line":147,"column":48}},"34":{"start":{"line":148,"column":8},"end":{"line":148,"column":57}},"35":{"start":{"line":149,"column":8},"end":{"line":149,"column":43}},"36":{"start":{"line":150,"column":8},"end":{"line":152,"column":55}},"37":{"start":{"line":151,"column":10},"end":{"line":151,"column":51}},"38":{"start":{"line":152,"column":13},"end":{"line":152,"column":55}}},"branchMap":{"1":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":4},"end":{"line":110,"column":4}},{"start":{"line":110,"column":4},"end":{"line":110,"column":4}}]},"2":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"3":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":6},"end":{"line":139,"column":6}},{"start":{"line":139,"column":6},"end":{"line":139,"column":6}}]},"4":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":10},"end":{"line":139,"column":31}},{"start":{"line":139,"column":35},"end":{"line":139,"column":49}}]},"5":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":143,"column":8}},{"start":{"line":143,"column":8},"end":{"line":143,"column":8}}]},"6":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":8},"end":{"line":145,"column":8}},{"start":{"line":145,"column":8},"end":{"line":145,"column":8}}]},"7":{"line":150,"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":150,"column":8}},{"start":{"line":150,"column":8},"end":{"line":150,"column":8}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/buildAssets"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('../lib/gruntUtil')","  , path = require ('path')","  , fs = require ('fs');","","var MATCH_URLS = /\\burl\\s*\\(\\s*('|\")?\\s*(.*?)\\s*\\1?\\s*\\)/gi;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the Asset References Handler middleware."," * @constructor"," */","function BuildAssetsOptions ()","{}","","BuildAssetsOptions.prototype = {","  /**","   * Set to `true` to enable the assets builder.","   * @type {boolean}","   */","  enabled:   false,","  /**","   * Directory path that will be used as the reference point from where relative asset urls are calculated.","   * This determines where assets are exported to.","   * If you specify a relative path, it is resolved from the current filegroup's destination folder.","   * @type {string}","   */","  targetDir: '',","  /**","   * When `false`, required assets are copied to the assets target directory.","   *","   * When `true`, symlinks are generated instead. This speeds up the build operation considerably, and also saves disk","   * space.","   *","   * If your operating system does not support symlinks, or if you want to archive or upload the build output, use","   * `false`.","   * @type {boolean}","   */","  symlink:   true","};","","/**"," * @mixin"," */","var BuildAssetsOptionsMixin = {","  /**","   * Options specific to the Asset References Handler middleware.","   * @type {BuildAssetsOptions}","   */","  assets: new BuildAssetsOptions ()","};","","exports.options = BuildAssetsOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = BuildAssetsMiddleware;","","/**"," * Exports the assets required by the application's modules."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function BuildAssetsMiddleware (context)","{","  var grunt = context.grunt","    , options = context.options.assets;","","  /**","   * Records which files have been already exported.","   * Prevents duplicate asset exports.","   * It's a map of absolute file names to boolean `true`.","   * @type {Object.<string,boolean>}","   */","  var exportedAssets = {};","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (module)","  {","    /* jshint unused: vars */","    // Do nothing.","  };","","  this.build = function (targetScript)","  {","    if (!options.enabled) return;","    // Import file paths.","    var stylehseets = grunt.config (context.options.requiredStylesheets.exportToConfigProperty);","    if (!stylehseets) return; // No stylesheet sources are configured.","    var targetPath = path.dirname (targetScript);","    stylehseets.forEach (function (filePath)","    {","      var src = grunt.file.read (filePath);","      scan (path.dirname (filePath), targetPath, src);","    });","","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Scans a stylesheet for asset URL references and copies the assets to the build folder.","   * @private","   * @param {string} basePath","   * @param {string} targetPath","   * @param {string} sourceCode","   */","  function scan (basePath, targetPath, sourceCode)","  {","    var match;","    while ((match = MATCH_URLS.exec (sourceCode))) {","      var url = match[2];","      if (!url.match (/^http/i) && url[0] !== '/') { // Skip absolute URLs","        var absSrcPath = path.resolve (basePath, url)","          , absDestPath = path.resolve (targetPath, options.targetDir, url)","          , relDestPath = path.relative (targetPath, absDestPath);","        if (relDestPath[0] === '.')","          return util.warn ('Relative asset url falls outside the build folder: <cyan>%</cyan>%', url, util.NL);","        if (exportedAssets[absDestPath]) // skip already exported asset","          continue;","        else exportedAssets[absDestPath] = true;","        var absTargetFolder = path.dirname (absDestPath);","        grunt.file.mkdir (absTargetFolder);","        if (options.symlink)","          fs.symlinkSync (absSrcPath, absDestPath);","        else grunt.file.copy (absSrcPath, absDestPath);","      }","    }","  }","","}","",""],"l":{"13":1,"17":1,"27":1,"30":1,"59":1,"67":1,"71":1,"79":1,"81":0,"90":0,"96":0,"102":0,"108":0,"110":0,"112":0,"113":0,"114":0,"115":0,"117":0,"118":0,"134":1,"136":0,"137":0,"138":0,"139":0,"140":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/buildForeignScripts.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/buildForeignScripts.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"BuildForeignScriptsMiddleware","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":36,"column":0}}},"2":{"name":"(anonymous_2)","line":41,"loc":{"start":{"line":41,"column":17},"end":{"line":42,"column":2}}},"3":{"name":"(anonymous_3)","line":47,"loc":{"start":{"line":47,"column":15},"end":{"line":48,"column":2}}},"4":{"name":"(anonymous_4)","line":53,"loc":{"start":{"line":53,"column":15},"end":{"line":54,"column":2}}},"5":{"name":"(anonymous_5)","line":62,"loc":{"start":{"line":62,"column":65},"end":{"line":63,"column":8}}},"6":{"name":"(anonymous_6)","line":72,"loc":{"start":{"line":72,"column":19},"end":{"line":72,"column":32}}},"7":{"name":"(anonymous_7)","line":80,"loc":{"start":{"line":80,"column":52},"end":{"line":80,"column":65}}}},"statementMap":{"1":{"start":{"line":15,"column":0},"end":{"line":15,"column":51}},"2":{"start":{"line":17,"column":0},"end":{"line":20,"column":67}},"3":{"start":{"line":35,"column":0},"end":{"line":88,"column":1}},"4":{"start":{"line":41,"column":2},"end":{"line":45,"column":4}},"5":{"start":{"line":47,"column":2},"end":{"line":51,"column":4}},"6":{"start":{"line":53,"column":2},"end":{"line":86,"column":4}},"7":{"start":{"line":56,"column":4},"end":{"line":85,"column":5}},"8":{"start":{"line":60,"column":6},"end":{"line":84,"column":7}},"9":{"start":{"line":61,"column":8},"end":{"line":61,"column":61}},"10":{"start":{"line":62,"column":8},"end":{"line":73,"column":26}},"11":{"start":{"line":64,"column":10},"end":{"line":64,"column":58}},"12":{"start":{"line":65,"column":10},"end":{"line":67,"column":69}},"13":{"start":{"line":66,"column":12},"end":{"line":67,"column":69}},"14":{"start":{"line":67,"column":14},"end":{"line":67,"column":69}},"15":{"start":{"line":68,"column":10},"end":{"line":69,"column":70}},"16":{"start":{"line":69,"column":12},"end":{"line":69,"column":70}},"17":{"start":{"line":70,"column":10},"end":{"line":70,"column":20}},"18":{"start":{"line":72,"column":33},"end":{"line":72,"column":42}},"19":{"start":{"line":78,"column":11},"end":{"line":84,"column":7}},"20":{"start":{"line":80,"column":8},"end":{"line":80,"column":98}},"21":{"start":{"line":80,"column":67},"end":{"line":80,"column":84}},"22":{"start":{"line":82,"column":8},"end":{"line":82,"column":46}}},"branchMap":{"1":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":4},"end":{"line":56,"column":4}},{"start":{"line":56,"column":4},"end":{"line":56,"column":4}}]},"2":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":60,"column":6}},{"start":{"line":60,"column":6},"end":{"line":60,"column":6}}]},"3":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":10},"end":{"line":60,"column":36}},{"start":{"line":60,"column":40},"end":{"line":60,"column":74}}]},"4":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":10},"end":{"line":65,"column":10}},{"start":{"line":65,"column":10},"end":{"line":65,"column":10}}]},"5":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":10},"end":{"line":68,"column":10}},{"start":{"line":68,"column":10},"end":{"line":68,"column":10}}]},"6":{"line":78,"type":"if","locations":[{"start":{"line":78,"column":11},"end":{"line":78,"column":11}},{"start":{"line":78,"column":11},"end":{"line":78,"column":11}}]},"7":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":15},"end":{"line":78,"column":43}},{"start":{"line":78,"column":47},"end":{"line":78,"column":83}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/buildForeignScripts"," * @requires module:middleware/makeDebugBuild"," * @requires module:middleware/makeReleaseBuild"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","exports.middleware = BuildForeignScriptsMiddleware;","","var util = require ('../lib/gruntUtil')","  , path = require ('path')","  , NL = util.NL","  , MATCH_PATH_SEP = new RegExp (util.escapeRegExp(path.sep), 'g');","","/**"," * Builds non-angular-module scripts."," *"," * On release builds, this extension saves all non-module script files required by the application into a"," * single output file, in the correct loading order."," *"," * On debug builds, it appends SCRIPT tags to the head of the html document, which will load the original"," * source scripts in the correct order."," *"," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function BuildForeignScriptsMiddleware (context)","{","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (module)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.build = function (targetScript)","  {","    // Output the standalone scripts (if any).","    if (context.standaloneScripts.length) {","","      // Debug Build","","      if (context.options.debugBuild && context.options.debugBuild.enabled) {","        var rep = context.options.debugBuild.rebaseDebugUrls;","        context.prependOutput += (context.standaloneScripts.map (function (e)","        {","          var path = e.path.replace (MATCH_PATH_SEP, '/'); // Convert file paths to URLs.","          if (rep)","            for (var i = 0, m = rep.length; i < m; ++i)","              path = path.replace (rep[i].match, rep[i].replaceWith);","          if (path) // Ignore empty path; it means that this middleware should not output a script tag.","            return util.sprintf ('<script src=\\\"%\\\"></script>', path);","          return '';","        })","          .filter (function (x) {return x;}) // Remove empty paths.","          .join ('\\\\\\n'));","      }","","      // Release Build","","      else if (context.options.releaseBuild && context.options.releaseBuild.enabled) {","        /** @type {string[]} */","        var output = context.standaloneScripts.map (function (e) { return e.content; }).join (NL);","","        util.writeFile (targetScript, output);","        //Note: the ensuing release/debug build step will append to the file created here.","      }","    }","  };","","}",""],"l":{"15":1,"17":1,"35":1,"41":0,"47":0,"53":0,"56":0,"60":0,"61":0,"62":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"72":0,"78":0,"80":0,"82":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportRequiredStylesheets.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportRequiredStylesheets.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"ExportRequiredStylesheetsOptions","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":24,"column":0}}},"2":{"name":"ExportRequiredStylesheetsMiddleware","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":60,"column":0}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":17},"end":{"line":75,"column":2}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":81,"column":2}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":27},"end":{"line":84,"column":4}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":90,"column":2}}},"7":{"name":"scan","line":106,"loc":{"start":{"line":106,"column":2},"end":{"line":107,"column":2}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":36},"end":{"line":112,"column":6}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":58}},"2":{"start":{"line":23,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":26,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":38,"column":0},"end":{"line":44,"column":2}},"5":{"start":{"line":46,"column":0},"end":{"line":46,"column":56}},"6":{"start":{"line":50,"column":0},"end":{"line":50,"column":57}},"7":{"start":{"line":59,"column":0},"end":{"line":119,"column":1}},"8":{"start":{"line":61,"column":2},"end":{"line":61,"column":52}},"9":{"start":{"line":62,"column":2},"end":{"line":62,"column":30}},"10":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"11":{"start":{"line":74,"column":2},"end":{"line":78,"column":4}},"12":{"start":{"line":80,"column":2},"end":{"line":87,"column":4}},"13":{"start":{"line":82,"column":4},"end":{"line":82,"column":44}},"14":{"start":{"line":83,"column":4},"end":{"line":86,"column":7}},"15":{"start":{"line":85,"column":6},"end":{"line":85,"column":43}},"16":{"start":{"line":89,"column":2},"end":{"line":95,"column":4}},"17":{"start":{"line":94,"column":4},"end":{"line":94,"column":65}},"18":{"start":{"line":106,"column":2},"end":{"line":117,"column":3}},"19":{"start":{"line":109,"column":4},"end":{"line":109,"column":14}},"20":{"start":{"line":110,"column":4},"end":{"line":116,"column":5}},"21":{"start":{"line":111,"column":6},"end":{"line":115,"column":9}},"22":{"start":{"line":113,"column":8},"end":{"line":113,"column":47}},"23":{"start":{"line":114,"column":8},"end":{"line":114,"column":74}}},"branchMap":{},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/exportRequiredStylesheets"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var MATCH_DIRECTIVE = /\\/\\/#\\s*stylesheets?\\s*\\((.*?)\\)/g;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the Stylesheet References Handler middleware."," * @constructor"," */","function ExportRequiredStylesheetsOptions ()","{}","","ExportRequiredStylesheetsOptions.prototype = {","  /**","   * The name of the Gruntfile config property to where the list of required stylesheet paths will be exported.","   * These stylesheets are those required by javascript files included in the build via build-directives.","   * @type {string}","   */","  exportToConfigProperty: 'requiredStylesheets'","};","","/**"," * @mixin"," */","var ExportRequiredStylesheetsOptionsMixin = {","  /**","   * Options specific to the Stylesheet References Handler middleware.","   * @type {ExportRequiredStylesheetsOptions}","   */","  requiredStylesheets: new ExportRequiredStylesheetsOptions ()","};","","exports.options = ExportRequiredStylesheetsOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = ExportRequiredStylesheetsMiddleware;","","/**"," * Exports to Grunt's global configuration the paths of all stylesheets required by the application,"," * in the order defined by the modules' dependency graph."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function ExportRequiredStylesheetsMiddleware (context)","{","  var options = context.options.requiredStylesheets;","  var path = require ('path');","","  /**","   * Paths of the required stylesheets.","   * @type {string[]}","   */","  var paths = [];","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (/*ModuleDef*/ module)","  {","    scan (module.head, module.filePaths[0]);","    module.bodies.forEach (function (path, i)","    {","      scan (path, module.filePaths[i + 1]);","    });","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","","    // Export file paths.","    context.grunt.config (options.exportToConfigProperty, paths);","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Extracts file paths from embedded comment references to stylesheets and appends them to `paths`.","   * @param {string} sourceCode","   * @param {string} filePath","   */","  function scan (sourceCode, filePath)","  {","    /* jshint -W083 */","    var match;","    while ((match = MATCH_DIRECTIVE.exec (sourceCode))) {","      match[1].split (',').forEach (function (s)","      {","        var url = s.match (/([\"'])(.*?)\\1/)[2];","        paths.push (path.normalize (path.dirname (filePath) + '/' + url));","      });","    }","  }","","}",""],"l":{"13":1,"23":1,"26":1,"38":1,"46":1,"50":1,"59":1,"61":0,"62":0,"68":0,"74":0,"80":0,"82":0,"83":0,"85":0,"89":0,"94":0,"106":1,"109":0,"110":0,"111":0,"113":0,"114":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportRequiredTemplates.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportRequiredTemplates.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0},"b":{},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"ExportRequiredTemplatesOptions","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":24,"column":0}}},"2":{"name":"ExportRequiredTemplatesMiddleware","line":59,"loc":{"start":{"line":59,"column":0},"end":{"line":60,"column":0}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":17},"end":{"line":75,"column":2}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":81,"column":2}}},"5":{"name":"(anonymous_5)","line":83,"loc":{"start":{"line":83,"column":27},"end":{"line":84,"column":4}}},"6":{"name":"(anonymous_6)","line":89,"loc":{"start":{"line":89,"column":15},"end":{"line":90,"column":2}}},"7":{"name":"scan","line":106,"loc":{"start":{"line":106,"column":2},"end":{"line":107,"column":2}}},"8":{"name":"(anonymous_8)","line":111,"loc":{"start":{"line":111,"column":36},"end":{"line":112,"column":6}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":56}},"2":{"start":{"line":23,"column":0},"end":{"line":24,"column":2}},"3":{"start":{"line":26,"column":0},"end":{"line":33,"column":2}},"4":{"start":{"line":38,"column":0},"end":{"line":44,"column":2}},"5":{"start":{"line":46,"column":0},"end":{"line":46,"column":54}},"6":{"start":{"line":50,"column":0},"end":{"line":50,"column":55}},"7":{"start":{"line":59,"column":0},"end":{"line":119,"column":1}},"8":{"start":{"line":61,"column":2},"end":{"line":61,"column":50}},"9":{"start":{"line":62,"column":2},"end":{"line":62,"column":30}},"10":{"start":{"line":68,"column":2},"end":{"line":68,"column":17}},"11":{"start":{"line":74,"column":2},"end":{"line":78,"column":4}},"12":{"start":{"line":80,"column":2},"end":{"line":87,"column":4}},"13":{"start":{"line":82,"column":4},"end":{"line":82,"column":44}},"14":{"start":{"line":83,"column":4},"end":{"line":86,"column":7}},"15":{"start":{"line":85,"column":6},"end":{"line":85,"column":43}},"16":{"start":{"line":89,"column":2},"end":{"line":95,"column":4}},"17":{"start":{"line":94,"column":4},"end":{"line":94,"column":65}},"18":{"start":{"line":106,"column":2},"end":{"line":117,"column":3}},"19":{"start":{"line":109,"column":4},"end":{"line":109,"column":14}},"20":{"start":{"line":110,"column":4},"end":{"line":116,"column":5}},"21":{"start":{"line":111,"column":6},"end":{"line":115,"column":9}},"22":{"start":{"line":113,"column":8},"end":{"line":113,"column":47}},"23":{"start":{"line":114,"column":8},"end":{"line":114,"column":74}}},"branchMap":{},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/exportRequiredTemplates"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var MATCH_DIRECTIVE = /\\/\\/#\\s*templates?\\s*\\((.*?)\\)/g;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the Template References Handler middleware."," * @constructor"," */","function ExportRequiredTemplatesOptions ()","{}","","ExportRequiredTemplatesOptions.prototype = {","  /**","   * The name of the Gruntfile config property to where the list of required template paths will be exported.","   * These HTML templates are those required by javascript files included in the build via build-directives.","   * @type {string}","   */","  exportToConfigProperty: 'requiredTemplates'","};","","/**"," * @mixin"," */","var ExportRequiredTemplatesOptionsMixin = {","  /**","   * Options specific to the Template References Handler middleware.","   * @type {ExportRequiredTemplatesOptions}","   */","  requiredTemplates: new ExportRequiredTemplatesOptions ()","};","","exports.options = ExportRequiredTemplatesOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = ExportRequiredTemplatesMiddleware;","","/**"," * Exports to Grunt's global configuration the paths of all templates required by the application,"," * in the order defined by the modules' dependency graph."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function ExportRequiredTemplatesMiddleware (context)","{","  var options = context.options.requiredTemplates;","  var path = require ('path');","","  /**","   * Paths of the required templates.","   * @type {string[]}","   */","  var paths = [];","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (module)","  {","    scan (module.head, module.filePaths[0]);","    module.bodies.forEach (function (path, i)","    {","      scan (path, module.filePaths[i + 1]);","    });","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","","    // Export file paths.","    context.grunt.config (options.exportToConfigProperty, paths);","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Extracts file paths from embedded comment references to templates and appends them to `paths`.","   * @param {string} sourceCode","   * @param {string} filePath","   */","  function scan (sourceCode, filePath)","  {","    /* jshint -W083 */","    var match;","    while ((match = MATCH_DIRECTIVE.exec (sourceCode))) {","      match[1].split (',').forEach (function (s)","      {","        var url = s.match (/([\"'])(.*?)\\1/)[2];","        paths.push (path.normalize (path.dirname (filePath) + '/' + url));","      });","    }","  }","","}",""],"l":{"13":1,"23":1,"26":1,"38":1,"46":1,"50":1,"59":1,"61":0,"62":0,"68":0,"74":0,"80":0,"82":0,"83":0,"85":0,"89":0,"94":0,"106":1,"109":0,"110":0,"111":0,"113":0,"114":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportSourcePaths.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/exportSourcePaths.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0},"b":{"1":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"ExportSourcePathsOptions","line":24,"loc":{"start":{"line":24,"column":0},"end":{"line":25,"column":0}}},"2":{"name":"ExportSourceCodePathsMiddleware","line":61,"loc":{"start":{"line":61,"column":0},"end":{"line":62,"column":0}}},"3":{"name":"(anonymous_3)","line":74,"loc":{"start":{"line":74,"column":17},"end":{"line":75,"column":2}}},"4":{"name":"(anonymous_4)","line":80,"loc":{"start":{"line":80,"column":15},"end":{"line":81,"column":2}}},"5":{"name":"(anonymous_5)","line":85,"loc":{"start":{"line":85,"column":15},"end":{"line":86,"column":2}}},"6":{"name":"(anonymous_6)","line":94,"loc":{"start":{"line":94,"column":59},"end":{"line":95,"column":6}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":14,"column":35}},"2":{"start":{"line":24,"column":0},"end":{"line":25,"column":2}},"3":{"start":{"line":27,"column":0},"end":{"line":35,"column":2}},"4":{"start":{"line":40,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":48,"column":0},"end":{"line":48,"column":48}},"6":{"start":{"line":52,"column":0},"end":{"line":52,"column":53}},"7":{"start":{"line":61,"column":0},"end":{"line":107,"column":1}},"8":{"start":{"line":63,"column":2},"end":{"line":63,"column":44}},"9":{"start":{"line":68,"column":2},"end":{"line":68,"column":23}},"10":{"start":{"line":74,"column":2},"end":{"line":78,"column":4}},"11":{"start":{"line":80,"column":2},"end":{"line":83,"column":4}},"12":{"start":{"line":82,"column":4},"end":{"line":82,"column":48}},"13":{"start":{"line":85,"column":2},"end":{"line":106,"column":4}},"14":{"start":{"line":89,"column":4},"end":{"line":89,"column":21}},"15":{"start":{"line":93,"column":4},"end":{"line":97,"column":10}},"16":{"start":{"line":94,"column":6},"end":{"line":97,"column":10}},"17":{"start":{"line":96,"column":8},"end":{"line":96,"column":22}},"18":{"start":{"line":101,"column":4},"end":{"line":101,"column":39}},"19":{"start":{"line":105,"column":4},"end":{"line":105,"column":67}}},"branchMap":{"1":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":4},"end":{"line":93,"column":4}},{"start":{"line":93,"column":4},"end":{"line":93,"column":4}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/exportSourcePaths"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('../lib/gruntUtil')","  , arrayAppend = util.arrayAppend;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the Source Code Paths Exporter middleware."," * @constructor"," */","function ExportSourcePathsOptions ()","{}","","ExportSourcePathsOptions.prototype = {","  /**","   * The name of the Gruntfile config property to where the list of required script paths will be exported.","   * These scripts are all those that are actually required by your project, including forced includes and","   * files included via build-directives.","   * @type {string}","   */","  exportToConfigProperty: 'requiredScripts'","};","","/**"," * @mixin"," */","var ExportSourcePathsOptionsMixin = {","  /**","   * Options specific to the Source Code Paths Exporter middleware.","   * @type {ExportSourcePathsOptions}","   */","  sourcePaths: new ExportSourcePathsOptions ()","};","","exports.options = ExportSourcePathsOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = ExportSourceCodePathsMiddleware;","","/**"," * Exports to Grunt's global configuration the paths of all script files that are required by the application,"," * in the order defined by the modules' dependency graph."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function ExportSourceCodePathsMiddleware (context)","{","  var options = context.options.sourcePaths;","  /**","   * Paths of all the required files (excluding standalone scripts) in the correct loading order.","   * @type {string[]}","   */","  var tracedPaths = [];","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (module)","  {","    arrayAppend (tracedPaths, module.filePaths);","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","","    var scripts = [];","","    // Include paths of forced-include scripts.","","    if (context.standaloneScripts.length)","      arrayAppend (scripts, context.standaloneScripts.map (function (e)","      {","        return e.path;","      }));","","    // Include all module files.","","    arrayAppend (scripts, tracedPaths);","","    // Export.","","    context.grunt.config (options.exportToConfigProperty, scripts);","  };","}",""],"l":{"13":1,"24":1,"27":1,"40":1,"48":1,"52":1,"61":1,"63":0,"68":0,"74":0,"80":0,"82":0,"85":0,"89":0,"93":0,"94":0,"96":0,"101":0,"105":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/includeRequiredScripts.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/includeRequiredScripts.js","s":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"IncludeRequiredScriptsMiddleware","line":26,"loc":{"start":{"line":26,"column":0},"end":{"line":27,"column":0}}},"2":{"name":"(anonymous_2)","line":54,"loc":{"start":{"line":54,"column":17},"end":{"line":55,"column":2}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":15},"end":{"line":61,"column":2}}},"4":{"name":"(anonymous_4)","line":64,"loc":{"start":{"line":64,"column":27},"end":{"line":65,"column":4}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":15},"end":{"line":71,"column":2}}},"6":{"name":"(anonymous_6)","line":74,"loc":{"start":{"line":74,"column":29},"end":{"line":75,"column":4}}},"7":{"name":"(anonymous_7)","line":84,"loc":{"start":{"line":84,"column":8},"end":{"line":84,"column":24}}},"8":{"name":"scan","line":99,"loc":{"start":{"line":99,"column":2},"end":{"line":100,"column":2}}},"9":{"name":"(anonymous_9)","line":105,"loc":{"start":{"line":105,"column":42},"end":{"line":106,"column":6}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":13,"column":54}},"2":{"start":{"line":15,"column":0},"end":{"line":15,"column":40}},"3":{"start":{"line":17,"column":0},"end":{"line":17,"column":53}},"4":{"start":{"line":26,"column":0},"end":{"line":131,"column":1}},"5":{"start":{"line":28,"column":2},"end":{"line":28,"column":30}},"6":{"start":{"line":34,"column":2},"end":{"line":34,"column":17}},"7":{"start":{"line":40,"column":2},"end":{"line":40,"column":19}},"8":{"start":{"line":48,"column":2},"end":{"line":48,"column":22}},"9":{"start":{"line":54,"column":2},"end":{"line":58,"column":4}},"10":{"start":{"line":60,"column":2},"end":{"line":68,"column":4}},"11":{"start":{"line":62,"column":4},"end":{"line":62,"column":94}},"12":{"start":{"line":63,"column":4},"end":{"line":63,"column":44}},"13":{"start":{"line":64,"column":4},"end":{"line":67,"column":7}},"14":{"start":{"line":66,"column":6},"end":{"line":66,"column":43}},"15":{"start":{"line":70,"column":2},"end":{"line":88,"column":4}},"16":{"start":{"line":74,"column":4},"end":{"line":80,"column":7}},"17":{"start":{"line":76,"column":6},"end":{"line":79,"column":8}},"18":{"start":{"line":81,"column":4},"end":{"line":81,"column":58}},"19":{"start":{"line":82,"column":4},"end":{"line":87,"column":5}},"20":{"start":{"line":83,"column":6},"end":{"line":85,"column":23}},"21":{"start":{"line":84,"column":26},"end":{"line":84,"column":64}},"22":{"start":{"line":86,"column":6},"end":{"line":86,"column":80}},"23":{"start":{"line":99,"column":2},"end":{"line":129,"column":3}},"24":{"start":{"line":102,"column":4},"end":{"line":103,"column":41}},"25":{"start":{"line":104,"column":4},"end":{"line":128,"column":5}},"26":{"start":{"line":105,"column":6},"end":{"line":127,"column":9}},"27":{"start":{"line":107,"column":8},"end":{"line":107,"column":42}},"28":{"start":{"line":108,"column":8},"end":{"line":126,"column":9}},"29":{"start":{"line":109,"column":10},"end":{"line":110,"column":34}},"30":{"start":{"line":112,"column":10},"end":{"line":112,"column":25}},"31":{"start":{"line":113,"column":10},"end":{"line":113,"column":82}},"32":{"start":{"line":115,"column":10},"end":{"line":125,"column":11}},"33":{"start":{"line":116,"column":12},"end":{"line":116,"column":44}},"34":{"start":{"line":117,"column":12},"end":{"line":117,"column":64}},"35":{"start":{"line":120,"column":12},"end":{"line":120,"column":40}},"36":{"start":{"line":123,"column":12},"end":{"line":123,"column":38}},"37":{"start":{"line":124,"column":12},"end":{"line":124,"column":34}}},"branchMap":{"1":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"2":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":108,"column":8}},{"start":{"line":108,"column":8},"end":{"line":108,"column":8}}]},"3":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":10},"end":{"line":115,"column":10}},{"start":{"line":115,"column":10},"end":{"line":115,"column":10}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/includeRequiredScripts"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","exports.middleware = IncludeRequiredScriptsMiddleware;","","var util = require ('../lib/gruntUtil');","","var MATCH_DIRECTIVE = /\\/\\/#\\s*require\\s*\\((.*?)\\)/g;","","/**"," * Exports to the context the paths of all extra scripts required explicitly by build-directives,"," * in the order defined by the modules' dependency graph."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function IncludeRequiredScriptsMiddleware (context)","{","  var path = require ('path');","","  /**","   * Paths of the required scripts.","   * @type {string[]}","   */","  var paths = [];","","  /**","   * File content of the required scripts.","   * @type {string[]}","   */","  var sources = [];","","  /**","   * Map of required script paths, as they are being resolved.","   * Prevents infinite recursion and redundant scans.","   * Note: paths will be registered here *before* being added to `paths`.","   * @type {Object.<string,boolean>}","   */","  var references = {};","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (module)","  {","    util.info (\"Scanning <cyan>%</cyan> for non-angular script dependencies...\", module.name);","    scan (module.head, module.filePaths[0]);","    module.bodies.forEach (function (path, i)","    {","      scan (path, module.filePaths[i + 1]);","    });","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","","    var scripts = paths.map (function (path, i)","    {","      return {","        path:    path,","        content: sources[i]","      };","    });","    util.arrayAppend (context.standaloneScripts, scripts);","    if (context.standaloneScripts.length) {","      var list = context.standaloneScripts.map (","        function (e, i) { return '  ' + (i + 1) + '. ' + e.path; }","      ).join (util.NL);","      util.info (\"Required non-angular scripts:%<cyan>%</cyan>\", util.NL, list);","    }","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Extracts file paths from embedded comment references to scripts and appends them to `paths`.","   * @param {string} sourceCode","   * @param {string} filePath","   */","  function scan (sourceCode, filePath)","  {","    /* jshint -W083 */","    var match","      , r = new RegExp (MATCH_DIRECTIVE);","    while ((match = r.exec (sourceCode))) {","      match[1].split (/\\s*,\\s*/).forEach (function (s)","      {","        var m = s.match (/([\"'])(.*?)\\1/);","        if (!m)","          util.warn ('syntax error on #script directive on argument ...<cyan> % </cyan>...%At <cyan>%</cyan>\\t',","            s, util.NL, filePath);","        else {","          var url = m[2];","          var requiredPath = path.normalize (path.dirname (filePath) + '/' + url);","          // Check if this script was not already referenced.","          if (!references[requiredPath]) {","            references[requiredPath] = true;","            var source = context.grunt.file.read (requiredPath);","            // First, see if the required script has its own 'requires'.","            // If so, they must be required *before* the current script.","            scan (source, requiredPath);","","            // Let's register the dependency now.","            paths.push (requiredPath);","            sources.push (source);","          }","        }","      });","    }","  }","","}",""],"l":{"13":1,"15":1,"17":1,"26":1,"28":0,"34":0,"40":0,"48":0,"54":0,"60":0,"62":0,"63":0,"64":0,"66":0,"70":0,"74":0,"76":0,"81":0,"82":0,"83":0,"84":0,"86":0,"99":1,"102":0,"104":0,"105":0,"107":0,"108":0,"109":0,"112":0,"113":0,"115":0,"116":0,"117":0,"120":0,"123":0,"124":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/makeDebugBuild.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/makeDebugBuild.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"MakeDebugBuildOptions","line":28,"loc":{"start":{"line":28,"column":0},"end":{"line":29,"column":0}}},"2":{"name":"MakeDebugBuildMiddleware","line":75,"loc":{"start":{"line":75,"column":0},"end":{"line":76,"column":0}}},"3":{"name":"(anonymous_3)","line":85,"loc":{"start":{"line":85,"column":49},"end":{"line":86,"column":2}}},"4":{"name":"(anonymous_4)","line":97,"loc":{"start":{"line":97,"column":17},"end":{"line":98,"column":2}}},"5":{"name":"(anonymous_5)","line":103,"loc":{"start":{"line":103,"column":15},"end":{"line":104,"column":2}}},"6":{"name":"(anonymous_6)","line":108,"loc":{"start":{"line":108,"column":30},"end":{"line":109,"column":4}}},"7":{"name":"(anonymous_7)","line":118,"loc":{"start":{"line":118,"column":15},"end":{"line":119,"column":2}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":14,"column":37}},"2":{"start":{"line":16,"column":0},"end":{"line":18,"column":17}},"3":{"start":{"line":28,"column":0},"end":{"line":29,"column":2}},"4":{"start":{"line":31,"column":0},"end":{"line":49,"column":2}},"5":{"start":{"line":54,"column":0},"end":{"line":60,"column":2}},"6":{"start":{"line":62,"column":0},"end":{"line":62,"column":45}},"7":{"start":{"line":66,"column":0},"end":{"line":66,"column":46}},"8":{"start":{"line":75,"column":0},"end":{"line":139,"column":1}},"9":{"start":{"line":77,"column":2},"end":{"line":77,"column":43}},"10":{"start":{"line":79,"column":2},"end":{"line":79,"column":23}},"11":{"start":{"line":85,"column":2},"end":{"line":91,"column":5}},"12":{"start":{"line":87,"column":4},"end":{"line":90,"column":5}},"13":{"start":{"line":88,"column":6},"end":{"line":88,"column":44}},"14":{"start":{"line":89,"column":6},"end":{"line":89,"column":77}},"15":{"start":{"line":97,"column":2},"end":{"line":101,"column":4}},"16":{"start":{"line":103,"column":2},"end":{"line":116,"column":4}},"17":{"start":{"line":105,"column":4},"end":{"line":105,"column":33}},"18":{"start":{"line":105,"column":26},"end":{"line":105,"column":33}},"19":{"start":{"line":107,"column":4},"end":{"line":107,"column":38}},"20":{"start":{"line":108,"column":4},"end":{"line":115,"column":7}},"21":{"start":{"line":110,"column":6},"end":{"line":112,"column":65}},"22":{"start":{"line":111,"column":8},"end":{"line":112,"column":65}},"23":{"start":{"line":112,"column":10},"end":{"line":112,"column":65}},"24":{"start":{"line":113,"column":6},"end":{"line":114,"column":78}},"25":{"start":{"line":114,"column":8},"end":{"line":114,"column":78}},"26":{"start":{"line":118,"column":2},"end":{"line":138,"column":4}},"27":{"start":{"line":122,"column":4},"end":{"line":122,"column":33}},"28":{"start":{"line":122,"column":26},"end":{"line":122,"column":33}},"29":{"start":{"line":125,"column":4},"end":{"line":125,"column":40}},"30":{"start":{"line":127,"column":4},"end":{"line":128,"column":42}},"31":{"start":{"line":128,"column":6},"end":{"line":128,"column":42}},"32":{"start":{"line":131,"column":4},"end":{"line":131,"column":43}},"33":{"start":{"line":133,"column":4},"end":{"line":134,"column":41}},"34":{"start":{"line":134,"column":6},"end":{"line":134,"column":41}},"35":{"start":{"line":136,"column":4},"end":{"line":136,"column":25}},"36":{"start":{"line":137,"column":4},"end":{"line":137,"column":56}}},"branchMap":{"1":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":87,"column":4}},{"start":{"line":87,"column":4},"end":{"line":87,"column":4}}]},"2":{"line":88,"type":"cond-expr","locations":[{"start":{"line":88,"column":36},"end":{"line":88,"column":38}},{"start":{"line":88,"column":41},"end":{"line":88,"column":43}}]},"3":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":4},"end":{"line":105,"column":4}},{"start":{"line":105,"column":4},"end":{"line":105,"column":4}}]},"4":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":6},"end":{"line":110,"column":6}},{"start":{"line":110,"column":6},"end":{"line":110,"column":6}}]},"5":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":6},"end":{"line":113,"column":6}},{"start":{"line":113,"column":6},"end":{"line":113,"column":6}}]},"6":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":122,"column":4}},{"start":{"line":122,"column":4},"end":{"line":122,"column":4}}]},"7":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":4},"end":{"line":127,"column":4}},{"start":{"line":127,"column":4},"end":{"line":127,"column":4}}]},"8":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":4},"end":{"line":133,"column":4}},{"start":{"line":133,"column":4},"end":{"line":133,"column":4}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/makeDebugBuild"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('../lib/gruntUtil')","  , types = require ('../lib/types');","","var ContextEvent = types.ContextEvent","  , writeln = util.writeln","  , NL = util.NL;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the debug builder middleware."," * @constructor"," */","function MakeDebugBuildOptions ()","{}","","MakeDebugBuildOptions.prototype = {","  /**","   * Enables the Debug Builder.","   *","   * When false, no debug build will be generated.","   * When true, the builder generates a set of &lt;script> tags to include all the required source files in the correct","   * loading order.","   *","   * Note: The use of this setting as an option is, probably, not what you want.","   * Use the `debug` task argument instead, as it allows using the same task target for both release and debug builds.","   * @type {boolean}","   */","  enabled:         false,","  /**","   * Transform the generated debug URLs of the source files. It's an array of regexp match and replace records.","   * @type {(Array.<{match:(RegExp|string),replaceWith:string}>|null)}","   */","  rebaseDebugUrls: null","};","","/**"," * @mixin"," */","var MakeDebugBuildOptionsMixin = {","  /**","   * Options specific to the debug builder middleware.","   * @type {MakeDebugBuildOptions}","   */","  debugBuild: new MakeDebugBuildOptions ()","};","","exports.options = MakeDebugBuildOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = MakeDebugBuildMiddleware;","","/**"," * Generates a script file that inserts SCRIPT tags to the head of the html document, which will load the original"," * source scripts in the correct order. This is used on debug builds."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function MakeDebugBuildMiddleware (context)","{","  var options = context.options.debugBuild;","  /** @type {string[]} */","  var traceOutput = [];","","  //--------------------------------------------------------------------------------------------------------------------","  // EVENTS","  //--------------------------------------------------------------------------------------------------------------------","","  context.listen (ContextEvent.ON_AFTER_ANALYZE, function ()","  {","    if (options.enabled) {","      var space = context.verbose ? NL : '';","      writeln ('%Generating the <cyan>debug</cyan> build...%', space, space);","    }","  });","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (/*ModuleDef*/ module)","  {","    if (!options.enabled) return;","","    var rep = options.rebaseDebugUrls;","    module.filePaths.forEach (function (path)","    {","      if (rep)","        for (var i = 0, m = rep.length; i < m; ++i)","          path = path.replace (rep[i].match, rep[i].replaceWith);","      if (path) // Ignore empty path; it means that this middleware should not output a script tag.","        traceOutput.push (util.sprintf ('<script src=\\\"%\\\"></script>', path));","    });","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","","    if (!options.enabled) return;","","    /** @type {string[]} */","    var output = ['document.write (\\''];","","    if (context.prependOutput)","      output.push (context.prependOutput);","","    // Output the modules (if any).","    util.arrayAppend (output, traceOutput);","","    if (context.appendOutput)","      output.push (context.appendOutput);","","    output.push ('\\');');","    util.writeFile (targetScript, output.join ('\\\\\\n'));","  };","}",""],"l":{"13":1,"16":1,"28":1,"31":1,"54":1,"62":1,"66":1,"75":1,"77":0,"79":0,"85":0,"87":0,"88":0,"89":0,"97":0,"103":0,"105":0,"107":0,"108":0,"110":0,"111":0,"112":0,"113":0,"114":0,"118":0,"122":0,"125":0,"127":0,"128":0,"131":0,"133":0,"134":0,"136":0,"137":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/makeReleaseBuild.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/makeReleaseBuild.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0,0,0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"MakeReleaseBuildOptions","line":45,"loc":{"start":{"line":45,"column":0},"end":{"line":46,"column":0}}},"2":{"name":"MakeReleaseBuildMiddleware","line":117,"loc":{"start":{"line":117,"column":0},"end":{"line":118,"column":0}}},"3":{"name":"(anonymous_3)","line":132,"loc":{"start":{"line":132,"column":49},"end":{"line":133,"column":2}}},"4":{"name":"(anonymous_4)","line":144,"loc":{"start":{"line":144,"column":17},"end":{"line":145,"column":2}}},"5":{"name":"(anonymous_5)","line":150,"loc":{"start":{"line":150,"column":15},"end":{"line":151,"column":2}}},"6":{"name":"(anonymous_6)","line":187,"loc":{"start":{"line":187,"column":15},"end":{"line":188,"column":2}}},"7":{"name":"optimize","line":212,"loc":{"start":{"line":212,"column":2},"end":{"line":213,"column":2}}},"8":{"name":"conditionalIndent","line":294,"loc":{"start":{"line":294,"column":2},"end":{"line":295,"column":2}}},"9":{"name":"warnAboutGlobalCode","line":304,"loc":{"start":{"line":304,"column":2},"end":{"line":305,"column":2}}},"10":{"name":"(anonymous_10)","line":316,"loc":{"start":{"line":316,"column":37},"end":{"line":317,"column":6}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":16,"column":53}},"2":{"start":{"line":18,"column":0},"end":{"line":26,"column":38}},"3":{"start":{"line":32,"column":0},"end":{"line":35,"column":2}},"4":{"start":{"line":45,"column":0},"end":{"line":46,"column":2}},"5":{"start":{"line":48,"column":0},"end":{"line":91,"column":2}},"6":{"start":{"line":96,"column":0},"end":{"line":102,"column":2}},"7":{"start":{"line":104,"column":0},"end":{"line":104,"column":47}},"8":{"start":{"line":108,"column":0},"end":{"line":108,"column":48}},"9":{"start":{"line":117,"column":0},"end":{"line":327,"column":1}},"10":{"start":{"line":119,"column":2},"end":{"line":119,"column":45}},"11":{"start":{"line":124,"column":2},"end":{"line":124,"column":45}},"12":{"start":{"line":126,"column":2},"end":{"line":126,"column":23}},"13":{"start":{"line":132,"column":2},"end":{"line":138,"column":5}},"14":{"start":{"line":134,"column":4},"end":{"line":137,"column":5}},"15":{"start":{"line":135,"column":6},"end":{"line":135,"column":44}},"16":{"start":{"line":136,"column":6},"end":{"line":136,"column":79}},"17":{"start":{"line":144,"column":2},"end":{"line":148,"column":4}},"18":{"start":{"line":150,"column":2},"end":{"line":185,"column":4}},"19":{"start":{"line":152,"column":4},"end":{"line":152,"column":33}},"20":{"start":{"line":152,"column":26},"end":{"line":152,"column":33}},"21":{"start":{"line":155,"column":4},"end":{"line":156,"column":82}},"22":{"start":{"line":156,"column":6},"end":{"line":156,"column":82}},"23":{"start":{"line":157,"column":4},"end":{"line":157,"column":67}},"24":{"start":{"line":161,"column":4},"end":{"line":184,"column":5}},"25":{"start":{"line":163,"column":6},"end":{"line":164,"column":37}},"26":{"start":{"line":164,"column":8},"end":{"line":164,"column":37}},"27":{"start":{"line":166,"column":6},"end":{"line":168,"column":8}},"28":{"start":{"line":173,"column":6},"end":{"line":173,"column":69}},"29":{"start":{"line":175,"column":6},"end":{"line":175,"column":50}},"30":{"start":{"line":177,"column":6},"end":{"line":180,"column":7}},"31":{"start":{"line":178,"column":8},"end":{"line":178,"column":80}},"32":{"start":{"line":179,"column":8},"end":{"line":179,"column":52}},"33":{"start":{"line":182,"column":6},"end":{"line":183,"column":91}},"34":{"start":{"line":187,"column":2},"end":{"line":197,"column":4}},"35":{"start":{"line":189,"column":4},"end":{"line":189,"column":33}},"36":{"start":{"line":189,"column":26},"end":{"line":189,"column":33}},"37":{"start":{"line":191,"column":4},"end":{"line":192,"column":50}},"38":{"start":{"line":192,"column":6},"end":{"line":192,"column":50}},"39":{"start":{"line":193,"column":4},"end":{"line":194,"column":46}},"40":{"start":{"line":194,"column":6},"end":{"line":194,"column":46}},"41":{"start":{"line":196,"column":4},"end":{"line":196,"column":57}},"42":{"start":{"line":212,"column":2},"end":{"line":287,"column":3}},"43":{"start":{"line":214,"column":4},"end":{"line":214,"column":79}},"44":{"start":{"line":215,"column":4},"end":{"line":215,"column":38}},"45":{"start":{"line":216,"column":4},"end":{"line":284,"column":5}},"46":{"start":{"line":223,"column":8},"end":{"line":226,"column":10}},"47":{"start":{"line":235,"column":8},"end":{"line":236,"column":63}},"48":{"start":{"line":236,"column":10},"end":{"line":236,"column":63}},"49":{"start":{"line":237,"column":8},"end":{"line":237,"column":63}},"50":{"start":{"line":238,"column":8},"end":{"line":245,"column":9}},"51":{"start":{"line":240,"column":10},"end":{"line":240,"column":27}},"52":{"start":{"line":242,"column":10},"end":{"line":242,"column":47}},"53":{"start":{"line":243,"column":10},"end":{"line":243,"column":44}},"54":{"start":{"line":247,"column":8},"end":{"line":250,"column":10}},"55":{"start":{"line":260,"column":8},"end":{"line":260,"column":34}},"56":{"start":{"line":261,"column":8},"end":{"line":268,"column":9}},"57":{"start":{"line":262,"column":10},"end":{"line":266,"column":12}},"58":{"start":{"line":269,"column":8},"end":{"line":272,"column":10}},"59":{"start":{"line":277,"column":8},"end":{"line":277,"column":71}},"60":{"start":{"line":279,"column":8},"end":{"line":279,"column":14}},"61":{"start":{"line":283,"column":8},"end":{"line":283,"column":84}},"62":{"start":{"line":286,"column":4},"end":{"line":286,"column":74}},"63":{"start":{"line":294,"column":2},"end":{"line":297,"column":3}},"64":{"start":{"line":296,"column":4},"end":{"line":296,"column":99}},"65":{"start":{"line":304,"column":2},"end":{"line":326,"column":3}},"66":{"start":{"line":306,"column":4},"end":{"line":313,"column":6}},"67":{"start":{"line":314,"column":4},"end":{"line":324,"column":5}},"68":{"start":{"line":315,"column":6},"end":{"line":315,"column":24}},"69":{"start":{"line":316,"column":6},"end":{"line":323,"column":9}},"70":{"start":{"line":318,"column":8},"end":{"line":321,"column":9}},"71":{"start":{"line":319,"column":10},"end":{"line":319,"column":23}},"72":{"start":{"line":320,"column":10},"end":{"line":320,"column":51}},"73":{"start":{"line":322,"column":8},"end":{"line":322,"column":101}},"74":{"start":{"line":325,"column":4},"end":{"line":325,"column":29}}},"branchMap":{"1":{"line":134,"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":134,"column":4}},{"start":{"line":134,"column":4},"end":{"line":134,"column":4}}]},"2":{"line":135,"type":"cond-expr","locations":[{"start":{"line":135,"column":36},"end":{"line":135,"column":38}},{"start":{"line":135,"column":41},"end":{"line":135,"column":43}}]},"3":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"4":{"line":155,"type":"if","locations":[{"start":{"line":155,"column":4},"end":{"line":155,"column":4}},{"start":{"line":155,"column":4},"end":{"line":155,"column":4}}]},"5":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":4},"end":{"line":161,"column":4}},{"start":{"line":161,"column":4},"end":{"line":161,"column":4}}]},"6":{"line":161,"type":"binary-expr","locations":[{"start":{"line":161,"column":8},"end":{"line":161,"column":29}},{"start":{"line":161,"column":33},"end":{"line":161,"column":84}}]},"7":{"line":163,"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":163,"column":6}},{"start":{"line":163,"column":6},"end":{"line":163,"column":6}}]},"8":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":45},"end":{"line":183,"column":60}},{"start":{"line":183,"column":64},"end":{"line":183,"column":66}}]},"9":{"line":189,"type":"if","locations":[{"start":{"line":189,"column":4},"end":{"line":189,"column":4}},{"start":{"line":189,"column":4},"end":{"line":189,"column":4}}]},"10":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":4},"end":{"line":191,"column":4}},{"start":{"line":191,"column":4},"end":{"line":191,"column":4}}]},"11":{"line":193,"type":"if","locations":[{"start":{"line":193,"column":4},"end":{"line":193,"column":4}},{"start":{"line":193,"column":4},"end":{"line":193,"column":4}}]},"12":{"line":216,"type":"switch","locations":[{"start":{"line":218,"column":6},"end":{"line":226,"column":10}},{"start":{"line":229,"column":6},"end":{"line":250,"column":10}},{"start":{"line":253,"column":6},"end":{"line":272,"column":10}},{"start":{"line":275,"column":6},"end":{"line":279,"column":14}},{"start":{"line":282,"column":6},"end":{"line":283,"column":84}}]},"13":{"line":235,"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":235,"column":8}},{"start":{"line":235,"column":8},"end":{"line":235,"column":8}}]},"14":{"line":238,"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":238,"column":8}},{"start":{"line":238,"column":8},"end":{"line":238,"column":8}}]},"15":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":8},"end":{"line":261,"column":8}},{"start":{"line":261,"column":8},"end":{"line":261,"column":8}}]},"16":{"line":296,"type":"cond-expr","locations":[{"start":{"line":296,"column":45},"end":{"line":296,"column":56}},{"start":{"line":296,"column":59},"end":{"line":296,"column":98}}]},"17":{"line":307,"type":"cond-expr","locations":[{"start":{"line":307,"column":14},"end":{"line":307,"column":40}},{"start":{"line":307,"column":43},"end":{"line":307,"column":45}}]},"18":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"19":{"line":318,"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":318,"column":8}},{"start":{"line":318,"column":8},"end":{"line":318,"column":8}}]},"20":{"line":322,"type":"cond-expr","locations":[{"start":{"line":322,"column":42},"end":{"line":322,"column":62}},{"start":{"line":322,"column":65},"end":{"line":322,"column":85}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/makeReleaseBuild"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('../lib/gruntUtil')","  , types = require ('../lib/types')","  , sourceTrans = require ('../lib/sourceTrans')","  , sourceExtract = require ('../lib/sourceExtract');","","var indent = util.indent","  , sprintf = util.sprintf","  , csprintf = util.csprintf","  , writeln = util.writeln","  , warn = util.warn","  , getExplanation = util.getExplanation","  , reportErrorLocation = util.reportErrorLocation","  , NL = util.NL","  , ContextEvent = types.ContextEvent;","","/**"," * Error codes returned by some functions in this module."," * @enum"," */","var STAT = {","  OK:       0,","  INDENTED: 1","};","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the release builder middleware."," * @constructor"," */","function MakeReleaseBuildOptions ()","{}","","MakeReleaseBuildOptions.prototype = {","  /**","   * Enables the Release Builder.","   *","   * When false, no release build will be generated.","   * When true, the builder generates a single optimized javascript file with all required source code in the correct","   * loading order.","   *","   * Note: The use of this setting as an option is, probably, not what you want.","   * Use the `debug` task argument instead, as it allows using the same task target for both release and debug builds.","   * @type {boolean}","   */","  enabled:          true,","  /**","   * Name of the variable representing the angular module being defined, to be used inside self-invoked anonymous","   * functions.","   * You may select another identifier if the default one causes a conflict with existing code.","   * @type {string}","   */","  moduleVar:        'module',","  /**","   * When <code>true</code>, angular module references passed as arguments to self-invoking functions will be","   * renamed to <code>config.moduleVar</code>.","   *","   * When <code>false</code>, if the module reference parameter has a name that is different from the one defined on","   * <code>config.moduleVar</code>, a warning will be issued and the task may stop, unless the `--force` option is","   * specified.","   * @type {boolean}","   */","  renameModuleRefs: false,","  /**","   * Indentation white space for one level.","   * You may, for instance, configure it for tabs or additional spaces.","   * @type {string}","   */","  indent:           '  ',","  /**","   * This string will be appended to each module definition block.","   * Use this to increase the readability of the generated script by visually separating each module from the previous","   * one.","   * @type {string}","   */","  moduleFooter:     NL + NL + NL","};","","/**"," * @mixin"," */","var MakeReleaseBuildOptionsMixin = {","  /**","   * Options specific to the release builder middleware.","   * @type {MakeReleaseBuildOptions}","   */","  releaseBuild: new MakeReleaseBuildOptions ()","};","","exports.options = MakeReleaseBuildOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = MakeReleaseBuildMiddleware;","","/**"," * Saves all script files required by the specified module into a single output file, in the correct"," * loading order. This is used on release builds."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function MakeReleaseBuildMiddleware (context)","{","  var options = context.options.releaseBuild;","  /**","   * Grunt's verbose output API.","   * @type {Object}","   */","  var verboseOut = context.grunt.log.verbose;","  /** @type {string[]} */","  var traceOutput = [];","","  //--------------------------------------------------------------------------------------------------------------------","  // EVENTS","  //--------------------------------------------------------------------------------------------------------------------","","  context.listen (ContextEvent.ON_AFTER_ANALYZE, function ()","  {","    if (options.enabled) {","      var space = context.verbose ? NL : '';","      writeln ('%Generating the <cyan>release</cyan> build...%', space, space);","    }","  });","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    // Do nothing","  };","","  this.trace = function (/*ModuleDef*/ module)","  {","    if (!options.enabled) return;","","    // Fist process the head module declaration.","    if (!module.head)","      return util.warn ('Module <cyan>%</cyan> has no declaration.', module.name);","    var head = optimize (module.head, module.filePaths[0], module);","","    // Prevent the creation of an empty (or comments-only) self-invoking function.","    // In that case, the head content will be output without a wrapping closure.","    if (!module.bodies.length && sourceExtract.matchWhiteSpaceOrComments (head.data)) {","      // Output the comments (if any).","      if (head.data.trim ())","        traceOutput.push (head.data);","      // Output a module declaration with no definitions.","      traceOutput.push (sprintf ('angular.module (\\'%\\', %);%', module.name,","          util.toQuotedList (module.requires), options.moduleFooter)","      );","    }","    // Enclose the module contents in a self-invoking function which receives the module instance as an argument.","    else {","      // Begin closure.","      traceOutput.push ('(function (' + options.moduleVar + ') {\\n');","      // Insert module declaration.","      traceOutput.push (conditionalIndent (head));","      // Insert additional module definitions.","      for (var i = 0, m = module.bodies.length; i < m; ++i) {","        var body = optimize (module.bodies[i], module.filePaths[i + 1], module);","        traceOutput.push (conditionalIndent (body));","      }","      // End closure.","      traceOutput.push (sprintf ('\\n}) (angular.module (\\'%\\', %%));%', module.name,","        util.toQuotedList (module.requires), module.configFn || '', options.moduleFooter));","    }","  };","","  this.build = function (targetScript)","  {","    if (!options.enabled) return;","","    if (context.prependOutput)","      traceOutput.unshift (context.prependOutput);","    if (context.appendOutput)","      traceOutput.push (context.appendOutput);","","    util.writeFile (targetScript, traceOutput.join (NL));","  };","","  //--------------------------------------------------------------------------------------------------------------------","  // PRIVATE","  //--------------------------------------------------------------------------------------------------------------------","","  /**","   * Calls sourceTrans.optimize() and handles the result.","   *","   * @param {string} source","   * @param {string} path For error messages.","   * @param {ModuleDef} module","   * @returns {OperationResult} The transformed source code.","   * @throws Error Sanity check.","   */","  function optimize (source, path, module)","  {","    var result = sourceTrans.optimize (source, module.name, options.moduleVar);","    var stat = sourceTrans.TRANS_STAT;","    switch (result.status) {","","      case stat.OK:","","        //----------------------------------------------------------","        // Module already enclosed in a closure with no arguments.","        //----------------------------------------------------------","        return /** @type {OperationResult} */ {","          status: STAT.INDENTED,","          data:   sourceTrans.renameModuleRefExps (module, options.indent + result.data, options.moduleVar)","        };","","","      case stat.NO_CLOSURE_FOUND:","","        //----------------------------------------------------------","        // Unwrapped source code.","        // It must be validated to make sure it's safe.","        //----------------------------------------------------------","        if (path)","          verboseOut.write ('Validating ' + path.cyan + '...');","        var valid = sourceTrans.validateUnwrappedCode (source);","        if (valid)","        // The code passed validation.","          verboseOut.ok ();","        else {","          verboseOut.writeln ('FAILED'.yellow);","          warnAboutGlobalCode (valid, path);","          // If --force, continue.","        }","        // Either the code is valid or --force was used, so process it.","        return /** @type {OperationResult} */ {","          status: STAT.OK,","          data:   sourceTrans.renameModuleRefExps (module, source, options.moduleVar)","        };","","","      case stat.RENAME_REQUIRED:","","        //----------------------------------------------------------","        // Module already enclosed in a closure, with its reference","        // passed in as the function's argument.","        //----------------------------------------------------------","        /** @type {ModuleClosureInfo} */","        var modInfo = result.data;","        if (!options.renameModuleRefs) {","          warn ('The module variable reference <cyan>%</cyan> doesn\\'t match the preset name on the config setting ' +","              '<cyan>moduleVar=\\'%\\'</cyan>.%%%',","            modInfo.moduleVar, options.moduleVar, NL, reportErrorLocation (path),","            getExplanation ('Either rename the variable or enable <cyan>renameModuleRefs</cyan>.')","          );","          // If --force, continue.","        }","        return /** @type {OperationResult} */ {","          status: STAT.OK,","          data:   sourceTrans.renameModuleVariableRefs (modInfo.closureBody, modInfo.moduleVar, options.moduleVar)","        };","","","      case stat.INVALID_DECLARATION:","","        warn ('Wrong module declaration: <cyan>%</cyan>', result.data);","        // If --force, continue.","        break;","","","      default:","        throw new Error ('Optimize failed. It returned ' + JSON.stringify (result));","    }","    // Optimization failed. Return the unaltered source code.","    return /** @type {OperationResult} */ {status: STAT.OK, data: source};","  }","","  /**","   * Returns the given text indented unless it was already indented.","   * @param {OperationResult} result","   * @return {string}","   */","  function conditionalIndent (result)","  {","    return result.status === STAT.INDENTED ? result.data : indent (result.data, 1, options.indent);","  }","","  /**","   * Isses a warning about problematic code found on the global scope.","   * @param {Object} sandbox","   * @param {string} path","   */","  function warnAboutGlobalCode (sandbox, path)","  {","    var msg = csprintf ('yellow', 'Incompatible code found on the global scope!'.red + NL +","      (path ? reportErrorLocation (path) : '') +","        getExplanation (","            'This kind of code will behave differently between release and debug builds.' + NL +","            'You should wrap it in a self-invoking function and/or assign global variables/functions ' +","            'directly to the window object.'","        )","    );","    if (context.verbose) {","      var found = false;","      util.forEachProperty (sandbox, function (k, v)","      {","        if (!found) {","          found = true;","          msg += '  Detected globals:'.yellow + NL;","        }","        msg += (typeof v === 'function' ? '    function '.blue : '    var      '.blue) + k.cyan + NL;","      });","    }","    warn (msg + '>>'.yellow);","  }","}",""],"l":{"13":1,"18":1,"32":1,"45":1,"48":1,"96":1,"104":1,"108":1,"117":1,"119":0,"124":0,"126":0,"132":0,"134":0,"135":0,"136":0,"144":0,"150":0,"152":0,"155":0,"156":0,"157":0,"161":0,"163":0,"164":0,"166":0,"173":0,"175":0,"177":0,"178":0,"179":0,"182":0,"187":0,"189":0,"191":0,"192":0,"193":0,"194":0,"196":0,"212":1,"214":0,"215":0,"216":0,"223":0,"235":0,"236":0,"237":0,"238":0,"240":0,"242":0,"243":0,"247":0,"260":0,"261":0,"262":0,"269":0,"277":0,"279":0,"283":0,"286":0,"294":1,"296":0,"304":1,"306":0,"314":0,"315":0,"316":0,"318":0,"319":0,"320":0,"322":0,"325":0}},"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/overrideDependencies.js":{"path":"/home/travis/build/npmtest/node-npmtest-grunt-angular-builder/node_modules/grunt-angular-builder/tasks/middleware/overrideDependencies.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":0,"3":0,"4":0,"5":0},"fnMap":{"1":{"name":"OverrideDependenciesOptions","line":27,"loc":{"start":{"line":27,"column":0},"end":{"line":28,"column":0}}},"2":{"name":"OverrideDependenciesMiddleware","line":79,"loc":{"start":{"line":79,"column":0},"end":{"line":80,"column":0}}},"3":{"name":"(anonymous_3)","line":89,"loc":{"start":{"line":89,"column":17},"end":{"line":90,"column":2}}},"4":{"name":"(anonymous_4)","line":103,"loc":{"start":{"line":103,"column":15},"end":{"line":104,"column":2}}},"5":{"name":"(anonymous_5)","line":108,"loc":{"start":{"line":108,"column":15},"end":{"line":109,"column":2}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":14,"column":37}},"2":{"start":{"line":16,"column":0},"end":{"line":17,"column":27}},"3":{"start":{"line":27,"column":0},"end":{"line":28,"column":2}},"4":{"start":{"line":30,"column":0},"end":{"line":53,"column":2}},"5":{"start":{"line":58,"column":0},"end":{"line":64,"column":2}},"6":{"start":{"line":66,"column":0},"end":{"line":66,"column":51}},"7":{"start":{"line":70,"column":0},"end":{"line":70,"column":52}},"8":{"start":{"line":79,"column":0},"end":{"line":121,"column":1}},"9":{"start":{"line":82,"column":2},"end":{"line":83,"column":68}},"10":{"start":{"line":89,"column":2},"end":{"line":101,"column":4}},"11":{"start":{"line":92,"column":4},"end":{"line":92,"column":25}},"12":{"start":{"line":92,"column":18},"end":{"line":92,"column":25}},"13":{"start":{"line":94,"column":4},"end":{"line":94,"column":52}},"14":{"start":{"line":95,"column":4},"end":{"line":95,"column":86}},"15":{"start":{"line":96,"column":4},"end":{"line":96,"column":47}},"16":{"start":{"line":98,"column":4},"end":{"line":98,"column":32}},"17":{"start":{"line":100,"column":4},"end":{"line":100,"column":26}},"18":{"start":{"line":103,"column":2},"end":{"line":106,"column":4}},"19":{"start":{"line":108,"column":2},"end":{"line":120,"column":4}},"20":{"start":{"line":111,"column":4},"end":{"line":111,"column":25}},"21":{"start":{"line":111,"column":18},"end":{"line":111,"column":25}},"22":{"start":{"line":113,"column":4},"end":{"line":119,"column":5}},"23":{"start":{"line":114,"column":6},"end":{"line":117,"column":8}},"24":{"start":{"line":118,"column":6},"end":{"line":118,"column":74}}},"branchMap":{"1":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":16},"end":{"line":83,"column":36}},{"start":{"line":83,"column":40},"end":{"line":83,"column":67}}]},"2":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":4},"end":{"line":92,"column":4}},{"start":{"line":92,"column":4},"end":{"line":92,"column":4}}]},"3":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":4},"end":{"line":111,"column":4}},{"start":{"line":111,"column":4},"end":{"line":111,"column":4}}]},"4":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":4},"end":{"line":113,"column":4}},{"start":{"line":113,"column":4},"end":{"line":113,"column":4}}]},"5":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":8},"end":{"line":113,"column":34}},{"start":{"line":113,"column":38},"end":{"line":113,"column":72}}]}},"code":["/**"," * Angular Builder middleware module."," *"," * @module middleware/overrideDependencies"," *"," * @license"," * Copyright 2013 Cláudio Manuel Brás da Silva"," * http://github.com/claudio-silva"," * Licensed under the MIT license."," */","'use strict';","","var util = require ('../lib/gruntUtil')","  , types = require ('../lib/types');","","var ModuleDef = types.ModuleDef","  , sprintf = util.sprintf;","","//----------------------------------------------------------------------------------------------------------------------","// OPTIONS","//----------------------------------------------------------------------------------------------------------------------","","/**"," * Options specific to the Main Module Synthetizer middleware."," * @constructor"," */","function OverrideDependenciesOptions ()","{}","","OverrideDependenciesOptions.prototype = {","  /**","   * A list of modules to be included in the build.","   * This allows a task to synthesize the main module's dependencies.","   * This is useful for building large applications that can have multiple alternative builds determined by the","   * user's profile or other criteria.","   *","   * This list will be set as the main module's list of required modules.","   * If it's empty, this functionality will be disabled and the build will be performed as usual.","   * If it's not empty, a synthetic main module definition will be generated for both the release and the debug","   * builds. You must <b>not</b> declare the main module in your application or, if you do, you must exclude","   * the file that declares it from the task's source files set.","   * The reason for this is that the generated main module declaration would collide with the one on the source code.","   * You may still declare services, directives, etc. for the main module, using the","   * <code>angular.module('name')</code> syntax, but you must not call the <code>module</code> method with more than one","   * argument.","   *","   * Note that, to be included in the output, the modules on this list must have their source files located somewhere","   * on the task's source paths.","   *","   * @type {string[]}","   */","  dependencies: []","};","","/**"," * @mixin"," */","var OverrideDependenciesOptionsMixin = {","  /**","   * Options specific to the Override Dependencies middleware.","   * @type {OverrideDependenciesOptions}","   */","  overrideDependencies: new OverrideDependenciesOptions ()","};","","exports.options = OverrideDependenciesOptionsMixin;","","//----------------------------------------------------------------------------------------------------------------------","","exports.middleware = OverrideDependenciesMiddleware;","","/**"," * Allows the setting of the main module's dependencies via Grunt configuration options and synthetizes that module's"," * declaration javascript code."," * @constructor"," * @implements {MiddlewareInterface}"," * @param {Context} context The execution context for the middleware stack."," */","function OverrideDependenciesMiddleware (context)","{","  /* jshint unused: vars */","  var options = context.options.overrideDependencies","    , enabled = options.dependencies && options.dependencies.length;","","  //--------------------------------------------------------------------------------------------------------------------","  // PUBLIC API","  //--------------------------------------------------------------------------------------------------------------------","","  this.analyze = function (filesArray)","  {","    /* jshint unused: vars */","    if (!enabled) return;","","    var mainModuleName = context.options.mainModule;","    var mainModule = context.modules[mainModuleName] = new ModuleDef (mainModuleName);","    mainModule.requires = options.dependencies;","    // Must define an empty path corresponding to the (non-existent) file that declared the module.","    mainModule.filePaths = [''];","    // Must set head to a non-empty string to mark the module as being initialized.","    mainModule.head = ' ';","  };","","  this.trace = function (module)","  {","    /* jshint unused: vars */","  };","","  this.build = function (targetScript)","  {","    /* jshint unused: vars */","    if (!enabled) return;","","    if (context.options.debugBuild && context.options.debugBuild.enabled) {","      var declaration = sprintf (\"angular.module('%',%);\",","        context.options.mainModule,","        util.toQuotedList (options.dependencies)","      );","      context.appendOutput += sprintf ('<script>%</script>', declaration);","    }","  };","}",""],"l":{"13":1,"16":1,"27":1,"30":1,"58":1,"66":1,"70":1,"79":1,"82":0,"89":0,"92":0,"94":0,"95":0,"96":0,"98":0,"100":0,"103":0,"108":0,"111":0,"113":0,"114":0,"118":0}}}